{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "ugptfdq6z3vu9"
  },
  "info": {
    "title": "QuranReflect V1 API",
    "description": "QuranReflect V1 APIs allows your app to interact with https://quranreflect.com resources. \n\n ## Getting started \n\n Our APIs are not public and require an API key. Please contact us via email `amer@qreflect.com` to get yours. \n\n ## User-specific APIs  \n\n All user-specific APIs (For example [Creating a post](/docs/quranreflect_versioned/quranreflect-v-1-api)) require the following headers:  \n\n - `access-token` the user access token, this token can be changed with every request. \n\n - `token-type`  value should always be `Bearer`. \n\n - `client` the client token, this too can be changed with every request. \n\n - `expiry` unix timestamp (in seconds) to indicate when access token will expire. \n\n - `uid` user's unique identifier. \n\n - `Authorization`: complete authorization header. Sample value `Bearer eyJhY2Nlc3MtdG9rZW4iOiJ4cjBrb3g1eXdVM3JrelVMZjhVUzlBIiwidG9rZW4tdHlwZSI6IkJlYXJlciIsImNsaWVudCI6IkpQeFJCRTloVmRBbDlTX1BVdEhJN2ciLCJleHBpcnkiOiIxNzA1OTQwNTQ3IiwidWlkIjoiYW1lci5hYmJhc0BtYWlsaW5hdG9yLmNvbSJ9`. \n\n The values of `access-token`, `client`, `expiry`, and `uid` headers will be returned in the response of [User Sign in API](/docs/quranreflect_versioned/user-signin).",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://quranreflect.com",
      "description": "Production"
    }
  ],
  "paths": {
    "/v1/users/sign_in": {
      "post": {
        "summary": "Sign in",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/signin-response"
          },
          "403": {
            "description": "Forbidden, api key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "You don't have permission!"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "message": "You don't have permission!"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity, data is invalid or missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "errors": [
                        "Invalid login credentials. Please try again."
                      ]
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Invalid login credentials. Please try again."
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "errors": [
                        "Invalid login credentials. Please try again."
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This API endpoint allows authenticated access by verifying user credentials. To sign in, the client sends a POST request to this endpoint with the user's email and password in the request body. Upon successful authentication, the server returns(in headers) an `access token`, `uid`, `client token`, and `Authorization` info , which can be used for authorized access to protected resources. In case of an unsuccessful authentication attempt, an error message is returned.",
        "operationId": "user-signin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "email": "user@quranreflect.com",
                    "password": "123456",
                    "client_auth_token": "YD2awPFAZIACstyc54TsfOLuRt4wkapZ"
                  }
                },
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "login using email, or you can use `login` field which support login using email or userame.",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "The email/username password."
                  },
                  "login": {
                    "type": "string",
                    "description": "email or username"
                  }
                },
                "required": [
                  "password"
                ]
              },
              "examples": {
                "Login using email": {
                  "value": {
                    "email": "example@quranreflect.com",
                    "password": "my password"
                  }
                },
                "Login using username": {
                  "value": {
                    "login": "myusername",
                    "password": "my password"
                  }
                }
              }
            }
          },
          "description": "Login body"
        }
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Sign Up",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/signup-response"
          },
          "403": {
            "description": "Forbidden, api key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "You don't have permission!"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "message": "You don't have permission!"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "This API endpoint allows creating a new user account by sending a POST request with the required user details. The response includes the newly created user object with a unique ID assigned by the system.",
        "operationId": "user-signup",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "user": {
                      "name": "Amer Abbas",
                      "first_name": "Amer",
                      "last_name": "Abbas",
                      "email": "amer@quranreflect.com",
                      "username": "amerabas",
                      "follow_notification": true,
                      "comments_notification": true,
                      "description": "test description",
                      "default_lang": "ar",
                      "password": "123456",
                      "password_confirmation": "1234567",
                      "apns_token": "value",
                      "avatar": "value"
                    }
                  }
                },
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "deprecated": true,
                        "description": "Full name of user, this is deprecated, please use `first_name` and `last_name` instead."
                      },
                      "first_name": {
                        "type": "string",
                        "description": "User's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "description": "User's last name."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email."
                      },
                      "username": {
                        "type": "string",
                        "description": "Username"
                      },
                      "description": {
                        "type": "string",
                        "description": "user bio"
                      },
                      "default_lang": {
                        "type": "string",
                        "description": "ISO code of the language that the user prefers to read posts in"
                      },
                      "password": {
                        "type": "string",
                        "description": "Account password."
                      },
                      "password_confirmation": {
                        "type": "string",
                        "description": "Account password confirmation."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "avatar file ",
                        "format": "file"
                      }
                    },
                    "required": [
                      "first_name",
                      "last_name"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "user": {
                      "name": "string",
                      "first_name": "string",
                      "last_name": "string",
                      "email": "string",
                      "username": "string",
                      "description": "string",
                      "default_lang": "string",
                      "password": "string",
                      "password_confirmation": "string",
                      "avatar": "string"
                    }
                  }
                }
              }
            }
          },
          "description": "Sign up body"
        }
      },
      "put": {
        "summary": "Update User Profile",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "integer"
            },
            "description": "token expiry timestamp",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/signup-response"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "description": "This API endpoint allows updating a user's profile information by sending a PUT request with the user ID and the updated details in the request body. The request body can include fields such as name, description, notification settings, and password etc. Upon successful update, the server returns the updated user object.",
        "operationId": "user-update",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Full name of user, this is deprecated, please use `first_name` and `last_name` instead.",
                    "deprecated": true
                  },
                  "first_name": {
                    "type": "string",
                    "description": "User's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "User's last name."
                  },
                  "follow_notification": {
                    "type": "boolean"
                  },
                  "comments_notification": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "description": "user bio"
                  },
                  "default_lang": {
                    "type": "string",
                    "description": "ISO code of the language that the user prefers to read posts in"
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "onesignal_player_id": {
                    "type": "string"
                  },
                  "apns_token": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "avatar file"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "user": {
                      "name": "string",
                      "first_name": "string",
                      "last_name": "string",
                      "follow_notification": true,
                      "comments_notification": true,
                      "description": "string",
                      "default_lang": "string",
                      "password": "string",
                      "password_confirmation": "string",
                      "onesignal_player_id": "string",
                      "apns_token": "string",
                      "avatar": "string"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "get": {
        "summary": "Search users",
        "responses": {
          "200": {
            "$ref": "#/components/responses/search-user-response"
          },
          "403": {
            "$ref": "#/components/responses/missing-apikey-response"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-users-list",
        "tags": [
          "Users"
        ],
        "description": "Get list of users, you can apply filters using the 'username' or 'email' parameters. Please note that at least one of these parameters must be provided in order to receive any results.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "username",
            "description": "search using username"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": "search using email"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ]
      }
    },
    "/v1/users/password": {
      "post": {
        "summary": "Generate reset password email",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
                    }
                  }
                },
                "examples": {
                  "Successful": {
                    "value": {
                      "success": true,
                      "message": "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/missing-apikey-response"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Reset user password, user will get an email with a link to page where they can update the password.",
        "operationId": "user-resetpassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "success": true,
                    "message": "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
                  }
                },
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "user email",
                    "format": "email"
                  }
                }
              },
              "examples": {}
            }
          }
        }
      }
    },
    "/v1/users/confirmation": {
      "post": {
        "summary": "Generate account confirmation email",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "Confirmation Link sent successfully"
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "string",
                      "example": "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                },
                "examples": {
                  "successful": {
                    "summary": "User create confirmation Link (success true)",
                    "value": {
                      "success": true,
                      "message": "Confirmation Link sent successfully"
                    }
                  },
                  "already-confirmed": {
                    "summary": "User create confirmation Link (success false)",
                    "value": {
                      "success": false,
                      "message": "Email was already confirmed, please try signing in"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "errors": [
                        "You must provide an email address."
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "errors": [
                        "You must provide an email address."
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/missing-apikey-response"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This API endpoint allows sending a new account confirmation email to the user's email address. The email contains a unique confirmation link that the user can click to confirm their account. Upon clicking the link, the server verifies the token and sets the account status to confirmed, allowing the user to log in. If the confirmation link is invalid or has expired, the server will show an error message.",
        "operationId": "generate-confirm-account-email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "user": {
                      "email": "user@quranreflect.com"
                    }
                  }
                },
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "user email",
                        "format": "email"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "user": {
                      "email": "salam@quranreflect.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/v1/users/sign_out": {
      "delete": {
        "summary": "Sign out",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531312879",
            "description": "timestamp of token expiry ",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "404": {
            "description": "Not Found, this usually means user is not logged in",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "errors": [
                        "User was not found or was not logged in."
                      ]
                    }
                  }
                },
                "example": {
                  "success": false,
                  "errors": [
                    "User was not found or was not logged in."
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "errors": [
                        "User was not found or was not logged in."
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This API endpoint allows logging out the authenticated user, clearing the access token and session from the server-side. \nUser will have to login again for getting new access token, client token etc.",
        "operationId": "user-logout"
      }
    },
    "/v1/posts": {
      "post": {
        "summary": "Create post",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "user access token"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer"
            },
            "example": " Bearer",
            "required": true,
            "description": "token type"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": " 1586092545",
            "description": "author's access token expiry timestamp",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": " user@quranreflect.com",
            "description": "author's uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/create-post-response"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Api will respond with 404 if creating post for a room and room doesn't exist. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Room with 'id'=1122222"
                    }
                  }
                },
                "examples": {
                  "invalid room": {
                    "value": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Room with 'id'=123"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "v1-post-create",
        "description": "Create reflection/post by sending a `POST` request with required params.Please see body schema for required params and their description.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "post": {
                      "body": "test test",
                      "draft": "0",
                      "tag_ids": [
                        "",
                        "5"
                      ],
                      "filters_attributes": [
                        {
                          "chapter_id": "4",
                          "from": "",
                          "to": ""
                        },
                        {
                          "chapter_id": "3",
                          "from": "1",
                          "to": "1"
                        },
                        {
                          "chapter_id": "6",
                          "from": "8",
                          "to": "11"
                        }
                      ]
                    }
                  }
                },
                "properties": {
                  "post": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "the post body"
                      },
                      "draft": {
                        "type": "boolean",
                        "default": false,
                        "description": "Provide `true` if this a private note of user. "
                      },
                      "tag_ids": {
                        "type": "array",
                        "description": "list of tag ids ",
                        "items": {
                          "type": "string"
                        }
                      },
                      "filters_attributes": {
                        "type": "array",
                        "description": "List of ayah/surah references for this reflection.You can add multiple references.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "chapter_id": {
                              "type": "integer",
                              "description": "surah number"
                            },
                            "from": {
                              "type": "integer",
                              "description": "From ayah number, use `from` and `to` if this reflection is for range of ayah. If both `from` and `to` are missing, that'll means user is referencing full surah for this post. "
                            },
                            "to": {
                              "type": "integer",
                              "description": "`to` ayah number. We'll use `from` value if this is blank(that'll mean a single ayah is being referenced for this post)"
                            }
                          }
                        }
                      },
                      "room_id": {
                        "type": "integer",
                        "description": "`room id` if creating post in a room/group"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "post": {
                      "body": "I love #Quran",
                      "draft": false,
                      "tag_ids": [
                        "5"
                      ],
                      "filters_attributes": [
                        {
                          "chapter_id": "4",
                          "from": "",
                          "to": ""
                        },
                        {
                          "chapter_id": "3",
                          "from": "1",
                          "to": "1"
                        },
                        {
                          "chapter_id": "6",
                          "from": "8",
                          "to": "11"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "get": {
        "summary": "Get posts",
        "description": "This API endpoint allows retrieving the list of reflections/post.\n \nBy using different query string, users can fetch posts that meet specific criteria, such as the most popular or latest posts, or posts created by a specific user. Some of these query strings are explained below:\n\n\n- `tab` query string, following table explain the `tab` value and expected results. \n\n> NOTE: For some `tab` value, user need to be logged in otherwise system will return an empty array. \n\n> NOTE: `access-token`, `client` and other auth headers are optional for this api. But you'll need to provide these headers if need to access `private notes` of author.\n \n tab value | Explanation | Required auth headers\n---------|----------|---------\n newest  | recent posts at top | No\n following | return reflections of authors that current user is following | Yes\n draft | returns current user's private notes | Yes\n favorite | returns current user's favorite posts | Yes\n most_popular | `default` tab value. Return most popular posts | No \n only_room_members | Send posts that are posted by current room members | No\n public | Include public posts of private rooms | No\n feed | `feed` is special tab value, this will ignore most filters(See below) and send verified posts(if `verified` is true), posts that are reviewed by scholars, posts from author current user is following(if user is logged in) etc | No \n \n`q` parameter is used for further customizing the results, you can fetch posts of specific members, post that have specific tags, post for specific surah, ayah range or single ayah etc. \n\n**Filter posts of specific users**\n- `q[author_ids]=1,2,3` => Get posts of author whose ids are 1,2, or 3.\n\n**Filter by specific post type**\n- `q[post_type_ids]` -> Comma-separated post type IDs.\nPost Type | Post Type Id\n---------|----------\n Reflection  | 1\n\n**Filter by Tags**\n- `q[tag_ids]` is array query string, you can include multiple tags using following format:\n\n`q[tag_ids][]=11&q[tag_ids][]=33`\n\n**Filter by specific ayah or range**\n- `q[filters_attributes][0][chapter_id]=1` -> Reflection of first surah\n\n- `q[filters_attributes][0][from]=1&q[filters_attributes][0][to]: 3` -> Filter down reflection to first 3 ayah of first surah\n\nYou can use multiple `filters_attributes` to tailor results to your needs.\n\n**Logical operation for filters**\n- q[filters_operation]= `OR` or `AND`. OR will send results that matches any filters. AND will perform inclusive operation, i.e return results that matches all conditions.\n- q[tags_operation]= `OR` or `AND`\n",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "verified",
            "description": "If `true` system will send verified reflections"
          },
          {
            "schema": {
              "type": "string",
              "default": "en"
            },
            "in": "query",
            "name": "lang",
            "description": "Comma separated list of iso codes of languages, use this if you want to fetch posts in specific language."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updated_since",
            "description": "Get posts that are updated after given date"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "exact_ayah",
            "description": "Get post for exact ayah, normally system will include posts for ayah range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "within_range",
            "description": "Get posts for ayahs that are within give filter range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "q",
            "description": "See above description "
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "scholar",
            "description": "Include scholars post"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "student",
            "description": "Include student of knowledge member's post"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "verified",
            "description": "shortcut if you need posts from scholars and student of knowledge members"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "following",
                "draft",
                "favorite",
                "most_popular",
                "only_room_members",
                "public",
                "feed"
              ]
            },
            "in": "query",
            "name": "tab",
            "description": "see description about tab above"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "object",
                      "properties": {
                        "posts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-0": {
                    "summary": "Get posts API not member in group",
                    "value": {
                      "success": false,
                      "message": "You are not member of this group!"
                    }
                  },
                  "example-2": {
                    "summary": "HomePage Posts Api",
                    "value": {
                      "posts": {
                        "posts": [
                          {
                            "id": 8,
                            "body": "<div>The most interesting thing about this verse is that it's not only telling us to use our talents for a higher purpose, but it's also telling &nbsp;us that we can make money and a worldly benefit in the process.</div>",
                            "likes": 9,
                            "draft": false,
                            "published_at": "December 28, 2016 06:27",
                            "room_id": null,
                            "global": true,
                            "editable": false,
                            "deletable": false,
                            "reportable": null,
                            "citation_texts": {
                              "0": [
                                {
                                  "id": 22037,
                                  "citation_id": 29,
                                  "number": 77,
                                  "text": "But seek, through that which Allah has given you, the home of the Hereafter; and [yet], do not forget your share of the world. And do good as Allah has done good to you. And desire not corruption in the land. Indeed, Allah does not like corrupters.\"",
                                  "translation_id": 5
                                }
                              ]
                            },
                            "language": "ENGLISH",
                            "detected_translation": 5,
                            "views": 439,
                            "group": null,
                            "group_link": null,
                            "comments": [
                              {
                                "id": 127,
                                "body": "",
                                "is_private": false,
                                "created_at": "2018-08-07T09:40:38.000Z",
                                "comment_policy_show": true,
                                "author": {
                                  "id": 11,
                                  "username": "amerabbas",
                                  "name": "Amer Abbas",
                                  "verified": false,
                                  "profile_img": "/system/users/avatars/000/000/011/original/data?1533416312",
                                  "followed": false
                                }
                              }
                            ],
                            "trimmed_citation_texts": {
                              "0": [
                                {
                                  "id": 22037,
                                  "citation_id": 29,
                                  "number": 77,
                                  "text": "But seek, through that which Allah has given you, the home of the Hereafter; and [yet], do not forget your share of the world. And do good as Allah has done good to you. And desire not corruption in the land. Indeed, Allah does not like corrupters.\"",
                                  "translation_id": 5
                                }
                              ]
                            },
                            "author": {
                              "id": 12,
                              "username": "hizzeldin",
                              "name": "Hisham Izzeldin ",
                              "verified": false,
                              "profile_img": null,
                              "followed": false
                            },
                            "filters": [
                              {
                                "id": 211,
                                "from": 77,
                                "to": 77,
                                "indicator_text": null
                              }
                            ],
                            "tags": [
                              {
                                "id": 10,
                                "name": "Personal Development"
                              }
                            ]
                          }
                        ]
                      },
                      "pages": 41
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/missing-apikey-response"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "post-list"
      }
    },
    "/v1/posts/{post_id}": {
      "put": {
        "summary": "Update Post API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "post": {
                      "body": "I love #Quran",
                      "draft": "0",
                      "tag_ids": [
                        "5"
                      ],
                      "filters_attributes": [
                        {
                          "chapter_id": "4",
                          "from": "",
                          "to": ""
                        },
                        {
                          "chapter_id": "3",
                          "from": "1",
                          "to": "1"
                        },
                        {
                          "chapter_id": "6",
                          "from": "8",
                          "to": "11"
                        }
                      ]
                    }
                  }
                },
                "properties": {
                  "post": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "post body"
                      },
                      "draft": {
                        "type": "boolean",
                        "default": false
                      },
                      "tag_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "filters_attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "chapter_id": {
                              "type": "string"
                            },
                            "from": {
                              "type": "string"
                            },
                            "to": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "room_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "post": {
                      "body": "I love #Quran",
                      "draft": "0",
                      "tag_ids": [
                        "5"
                      ],
                      "filters_attributes": [
                        {
                          "chapter_id": "4",
                          "from": "",
                          "to": ""
                        },
                        {
                          "chapter_id": "3",
                          "from": "1",
                          "to": "1"
                        },
                        {
                          "chapter_id": "6",
                          "from": "8",
                          "to": "11"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531163311",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid "
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/get-post-response"
          }
        },
        "operationId": "v1-post-update",
        "tags": [
          "Posts"
        ],
        "description": "Use this api to update existing post of author, please see `Create post` api for documention request params/body.\n"
      },
      "delete": {
        "summary": "Delete Post API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531163311",
            "description": "timestamp of token expiry",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "Post was successfully removed."
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "string",
                      "default": "Post was successfully removed."
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Post was successfully removed."
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "message": "Post was successfully removed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "v1-delete-post",
        "description": "Delete existing post of user"
      },
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "post_id",
          "in": "path",
          "required": true,
          "description": "post id"
        }
      ],
      "get": {
        "summary": "Get post detail",
        "operationId": "get-v1-posts-post_id",
        "responses": {
          "200": {
            "$ref": "#/components/responses/get-post-response"
          }
        },
        "description": "Get detail of single post using the post Id.\n\n> NOTE: `access-token`, `client` and other auth headers are optional for this api. But you'll need to provide these headers if need to access `private notes` or private room post of author.",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "access-token",
            "description": "user access token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "client",
            "description": "client access token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "expiry",
            "description": "timestamp of token expiry"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token-type",
            "description": "access token type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "uid",
            "description": "user uid"
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/v1/posts/{post_id}/report": {
      "post": {
        "summary": "Report Post API",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "access-token",
            "description": "user access token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "client",
            "description": "client access token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "expiry",
            "required": true,
            "description": "timestamp of token expiry"
          },
          {
            "schema": {
              "type": "string",
              "default": "Bearer",
              "example": "Bearer"
            },
            "in": "header",
            "name": "token-type",
            "description": "access token type",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "uid",
            "description": "user uid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "The post was reported successfully."
                    }
                  }
                },
                "examples": {
                  "example-0": {
                    "summary": "Report Post API (success true) (abuse options: [\"Offensive language\", \"Inappropriate content\", \"Other\"])",
                    "value": {
                      "success": true,
                      "message": "The post was reported successfully."
                    }
                  },
                  "example-1": {
                    "summary": "Report Post API (success false)",
                    "value": {
                      "success": false,
                      "message": "Some thing went wrong, please try again later!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "v1-post-report",
        "description": "The report post API allows users to report inappropriate or abusive content in a post to the system administrators. This can help to maintain a safe and respectful environment for all users.\n\n> NOTE: You can get list of \"report reasons\" using [**Get post report reasons**](/docs/quranreflect_versioned/v-1-post-report-option) api.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "report": {
                      "abuse": "Offensive language",
                      "comments": "report this post"
                    }
                  }
                },
                "properties": {
                  "report": {
                    "type": "object",
                    "properties": {
                      "abuse": {
                        "type": "string",
                        "description": "Report reason"
                      },
                      "comments": {
                        "type": "string",
                        "description": "user comments"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "report": {
                      "abuse": "Offensive language",
                      "comments": "report this post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "post_id",
          "in": "path",
          "required": true,
          "description": "post id"
        }
      ]
    },
    "/v1/posts/post_abuses_options": {
      "get": {
        "summary": "Get post report reasons",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "abuses_options": [
                        "Offensive language",
                        "Inappropriate content",
                        "Other"
                      ]
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "abuses_options": {
                      "type": "array",
                      "description": "list of report reasons",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "abuses_options": [
                    "Offensive language",
                    "Inappropriate content",
                    "Other"
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "abuses_options": [
                        "Offensive language",
                        "Inappropriate content",
                        "Other"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "v1-post-report-option",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "description": "The \"get post report reasons\" API allows users to retrieve a list of available report reasons for a post. This can help to provide context for users who want to report a post and ensure that they select an appropriate reason."
      }
    },
    "/v1/users/{username}": {
      "get": {
        "summary": "Get logged in user profile and posts",
        "responses": {
          "200": {
            "$ref": "#/components/responses/user-profile-response"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found with given username",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "get-user-profile-posts",
        "description": "This API endpoint allows retrieving the profile details of a logged in user, user's posts, pages, followers count etc. \n\nThe `tab` parameter is used in the API to allow users to customize their results. By passing different values to tab in the API endpoint, users can fetch posts that meet specific criteria, such as the most popular or latest posts, or posts created by a specific user. Following table explain the tab value and expected results.\n\nFor some `tab` value, user need to be logged in otherwise system will return an empty array. \n\n \n tab value | Explanation | Required user login\n---------|----------|---------\n newest  | recent posts at top | No\n following | return reflections of authors that current user is following | Yes\n draft | returns current user's private notes | Yes\n favorite | returns current user's favorite posts | Yes\n most_popular | `default` tab value. Return most popular posts | No \n\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "access-token",
            "description": "user access token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "client",
            "description": "client token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "expiry",
            "required": true,
            "description": "timestamp of token expiry date"
          },
          {
            "schema": {
              "type": "string",
              "example": "Bearer",
              "default": "Bearer"
            },
            "in": "header",
            "name": "token-type",
            "description": "access token type",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "uid",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "following",
                "favorite",
                "newest",
                "most_popular"
              ]
            },
            "in": "query",
            "name": "tab"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true,
          "description": "username of user"
        }
      ]
    },
    "/v1/users/{username}/toggle_follow": {
      "post": {
        "summary": "Toggle Follow for user",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1537100004",
            "description": "timestamp of access token expiry date",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer",
              "example": "Bearer"
            },
            "example": "Bearer",
            "description": "token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followed": {
                      "type": "boolean"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "followed": false
                    }
                  }
                },
                "example": {
                  "success": true
                },
                "examples": {
                  "follow": {
                    "value": {
                      "followed": true
                    }
                  },
                  "unfollow": {
                    "value": {
                      "followed": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/missing-apikey-response"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "success": false,
                      "message": "Invalid Users"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "users-toggle-follow",
        "description": "This API endpoint allows the authenticated user to toggle their follow status for another user by sending a POST request with the target user's username. If the user is already following the target user, sending the same request will unfollow the user, and vice versa.\n\nSystem will return found error if target user is not found. "
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true,
          "description": "target user's username"
        }
      ]
    },
    "/v1/users/{username}/follow": {
      "put": {
        "summary": "Follow user api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1537100004",
            "description": "timestamp of access token expiry date",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer",
              "example": "Bearer"
            },
            "example": "Bearer",
            "description": "token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followed": {
                      "type": "boolean"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "followed": false
                    }
                  }
                },
                "example": {
                  "success": true
                },
                "examples": {
                  "default": {
                    "value": {
                      "followed": true
                    }
                  },
                  "already following": {
                    "value": {
                      "success": false,
                      "followed": true,
                      "message": "@user is already followed by you."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "v1-users-follow",
        "description": "This API endpoint allows the authenticated user to follow another user by sending a POST request with the target user's username.\n\nSystem will return not found error if target user is not found. "
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true,
          "description": "target user's username"
        }
      ]
    },
    "/v1/users/{username}/unfollow": {
      "post": {
        "summary": "Un-follow user api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1537100004",
            "description": "timestamp of access token expiry date",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "Bearer",
              "example": "Bearer"
            },
            "example": "Bearer",
            "description": "token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followed": {
                      "type": "boolean"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "followed": false
                    }
                  }
                },
                "example": {
                  "success": true
                },
                "examples": {
                  "follow": {
                    "value": {
                      "followed": true
                    }
                  },
                  "unfollow": {
                    "value": {
                      "followed": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "users-un-follow",
        "description": "This API endpoint allows the authenticated user to unfollow another user by sending a POST request with the target user's username."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true,
          "description": "target user's username"
        }
      ]
    },
    "/v1/groups/{group_id}/assign_as_admin": {
      "post": {
        "summary": "Assign group admin api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry ",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "User amerabbas has been assigned as admin."
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success"
                  ]
                },
                "examples": {
                  "unauthorize": {
                    "summary": "Assign as admin in group settings (success false)",
                    "value": {
                      "success": false,
                      "message": "Unauthorized request. require page admin role."
                    }
                  },
                  "success": {
                    "summary": "Assign as admin in group settings (success true)",
                    "value": {
                      "success": true,
                      "message": "User amerabbas has been assigned as admin."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Room with 'id'=1"
                    }
                  },
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success"
                  ]
                },
                "examples": {
                  "room not found": {
                    "value": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Room with 'id'=1"
                    }
                  },
                  "user not found ": {
                    "value": {
                      "success": false,
                      "message": "User not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "operationId": "v1-groups-assign-admin",
        "description": "The \"assign group admin\" API allows group owners to assign an existing group member as an admin. Group admins can perform actions such as inviting new members, removing members, and updating group info.\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "id of user "
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "group_id",
          "in": "path",
          "required": true,
          "description": "group id"
        }
      ]
    },
    "/v1/groups": {
      "get": {
        "summary": "Groups List API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531312879",
            "required": true,
            "description": "timestamp of token expiry"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "usr uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/room-index-response"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "operationId": "v1-room-index",
        "description": "The \"get groups\" API allows users to retrieve a list of groups and pages that they are a member of."
      }
    },
    "/v1/groups/{group_id}/remove_user": {
      "post": {
        "summary": "Remove group member api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "User ali_ghoraba has been removed from page."
                    }
                  }
                },
                "examples": {
                  "member removed": {
                    "summary": "Remove User from groups API (success false)",
                    "value": {
                      "success": true,
                      "message": "User Naveed has been removed from page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "operationId": "v1-room-remove-member",
        "description": "The \"remove group member\" API allows a group admin to remove a member from a group. This can help group admins to manage their group membership and ensure that the group is only accessible to authorized members.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "id of user to be removed"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "group_id",
          "in": "path",
          "required": true,
          "description": "group id"
        }
      ]
    },
    "/v1/search/search_items": {
      "post": {
        "summary": "Search filters",
        "description": "The \"search filters\" API allows users perform multisearch for different filters, e.g search for users, tags, surah, ayah or ayah ranges.\n\nThis api is just like search, only difference is you can search using multiple queries and this is a POST request instead of GET.\n\nEach search query follow the following format:\n\n- If the search query starts with \"#\" (hashtag), the API will search for matching tags.\n- If the search query starts with \"@\" (at sign), the API will search for matching usernames.\n- Otherwise, the API will search for matching text in translations.\n\n\n> Auth header are optional, but if you're searching in user group/page then you'll need to provide the auth headers as well.\n",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "description": "user search result item",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "user id"
                          },
                          "text": {
                            "type": "string",
                            "description": "username"
                          },
                          "full_text": {
                            "type": "string",
                            "description": "full name with username"
                          },
                          "avatar": {
                            "type": "string",
                            "description": "url avatar url"
                          },
                          "collection": {
                            "type": "string",
                            "default": "authors"
                          }
                        }
                      },
                      {
                        "description": "tag search result item\n",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "collection": {
                            "type": "string",
                            "default": "tags"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  }
                },
                "example": {
                  "success": true,
                  "items": [
                    [
                      {
                        "id": 4,
                        "text": "#Akhera",
                        "collection": "tags"
                      }
                    ],
                    [
                      {
                        "from": 1,
                        "to": 3,
                        "text": "Al-Faatiha: 1 - 3",
                        "collection": "filters",
                        "chapter": {
                          "id": 2,
                          "number": 1,
                          "size": 7,
                          "citation_names": [
                            {
                              "id": 1,
                              "name": "Al-Faatiha",
                              "language_id": 2,
                              "translation_id": 5,
                              "default": false,
                              "default_for_filter": true
                            },
                            {
                              "id": 155,
                              "name": "الفاتحة",
                              "language_id": 1,
                              "translation_id": 1,
                              "default": true,
                              "default_for_filter": false
                            },
                            {
                              "id": 269,
                              "name": "The Opening",
                              "language_id": 2,
                              "translation_id": 6,
                              "default": true,
                              "default_for_filter": false
                            },
                            {
                              "id": 497,
                              "name": "La Apertura",
                              "language_id": 3,
                              "translation_id": 7,
                              "default": true,
                              "default_for_filter": false
                            }
                          ],
                          "name": "Al-Faatiha"
                        }
                      }
                    ],
                    [
                      {
                        "from": null,
                        "to": null,
                        "text": "Al-Baqara",
                        "collection": "filters",
                        "chapter": {
                          "id": 3,
                          "number": 2,
                          "size": 286,
                          "citation_names": [
                            {
                              "id": 2,
                              "name": "Al-Baqara",
                              "language_id": 2,
                              "translation_id": 5,
                              "default": false,
                              "default_for_filter": true
                            },
                            {
                              "id": 156,
                              "name": "البقرة",
                              "language_id": 1,
                              "translation_id": 1,
                              "default": true,
                              "default_for_filter": false
                            },
                            {
                              "id": 270,
                              "name": "The Cow",
                              "language_id": 2,
                              "translation_id": 6,
                              "default": true,
                              "default_for_filter": false
                            },
                            {
                              "id": 498,
                              "name": "La Vaca",
                              "language_id": 3,
                              "translation_id": 7,
                              "default": true,
                              "default_for_filter": false
                            }
                          ],
                          "name": "Al-Baqara"
                        }
                      }
                    ],
                    [
                      {
                        "id": 4,
                        "text": "@amerabbas",
                        "collection": "authors"
                      },
                      {
                        "id": 5,
                        "text": "@samerabbas",
                        "collection": "authors"
                      }
                    ]
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "items": [
                        {
                          "id": 1,
                          "text": "#Allah",
                          "language": "English",
                          "collection": "tags"
                        },
                        {
                          "id": 1,
                          "text": "@naveed",
                          "full_text": "Naveed Ahmad  (@naveed)",
                          "avatar": null,
                          "collection": "authors"
                        },
                        {
                          "from": null,
                          "to": null,
                          "text": "Maryam",
                          "collection": "filters",
                          "chapter": {
                            "id": 20,
                            "number": 19,
                            "size": 98,
                            "citation_names": [
                              {
                                "id": 19,
                                "name": "Maryam",
                                "language_id": 2,
                                "translation_id": 6,
                                "default": false,
                                "default_for_filter": true
                              }
                            ],
                            "name": "Maryam"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "q": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "q": [
                      "#Akhera",
                      "1:1-3",
                      "2",
                      "@amerabbas"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "v1-search-multi",
        "tags": [
          "Search"
        ]
      }
    },
    "/v1/search": {
      "get": {
        "summary": "Search api",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "x-examples": {
                    "Example 1": {
                      "items": [
                        {
                          "id": 11,
                          "text": "#Allah",
                          "language": "Malay",
                          "collection": "tags"
                        },
                        {
                          "id": 439,
                          "text": "@SameerReflects",
                          "full_text": "Sameer Qarizada (@SameerReflects)",
                          "avatar": null,
                          "collection": "authors"
                        },
                        {
                          "from": null,
                          "to": null,
                          "text": "Maryam",
                          "collection": "filters",
                          "chapter": {
                            "id": 20,
                            "number": 19,
                            "size": 98,
                            "citation_names": [
                              {
                                "id": 19,
                                "name": "Maryam",
                                "language_id": 2,
                                "translation_id": 6,
                                "default": false,
                                "default_for_filter": true
                              },
                              {
                                "id": 173,
                                "name": "مريم",
                                "language_id": 1,
                                "translation_id": 1,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 287,
                                "name": "Mary",
                                "language_id": 2,
                                "translation_id": 5,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 515,
                                "name": "María",
                                "language_id": 3,
                                "translation_id": 7,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 629,
                                "name": "مريم",
                                "language_id": 1,
                                "translation_id": 8,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 743,
                                "name": "Maryam",
                                "language_id": 4,
                                "translation_id": 9,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 859,
                                "name": "Mary",
                                "language_id": 5,
                                "translation_id": 10,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 973,
                                "name": "Maryam",
                                "language_id": 6,
                                "translation_id": 11,
                                "default": true,
                                "default_for_filter": false
                              },
                              {
                                "id": 1087,
                                "name": "Marie",
                                "language_id": 7,
                                "translation_id": 12,
                                "default": true,
                                "default_for_filter": false
                              }
                            ],
                            "name": "Maryam"
                          }
                        }
                      ]
                    }
                  },
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "description": "user search result item",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "user id"
                          },
                          "text": {
                            "type": "string",
                            "description": "username"
                          },
                          "full_text": {
                            "type": "string",
                            "description": "full name with username"
                          },
                          "avatar": {
                            "type": "string",
                            "description": "url avatar url"
                          },
                          "collection": {
                            "type": "string",
                            "default": "authors"
                          }
                        }
                      },
                      {
                        "description": "tag search result item\n",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "collection": {
                            "type": "string",
                            "default": "tags"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  }
                },
                "example": {
                  "items": [
                    {
                      "from": 31,
                      "to": 31,
                      "text": "L<u>a</u> <i><u>th</u></i>aleelin wal<u>a</u> yughnee mina allahab<b>i</b> - Al-Mursalaat:31",
                      "collection": "filters",
                      "chapter": {
                        "id": 78,
                        "number": 77,
                        "size": 50,
                        "citation_names": [
                          {
                            "id": 77,
                            "name": "Al-Mursalaat",
                            "language_id": 2,
                            "translation_id": 5,
                            "default": false,
                            "default_for_filter": true
                          },
                          {
                            "id": 231,
                            "name": "المرسلات",
                            "language_id": 1,
                            "translation_id": 1,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 345,
                            "name": "The Emissaries",
                            "language_id": 2,
                            "translation_id": 6,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 573,
                            "name": "Los Ángeles Enviados",
                            "language_id": 3,
                            "translation_id": 7,
                            "default": true,
                            "default_for_filter": false
                          }
                        ],
                        "name": "Al-Mursalaat"
                      },
                      "translation": {
                        "id": 6,
                        "name": "Transliteration"
                      }
                    },
                    {
                      "from": 85,
                      "to": 85,
                      "text": "Q<u>a</u>la fainn<u>a</u> qad fatann<u>a</u> qawmaka min baAAdika waa<u>d</u>allahumu a<b>l</b>ss<u>a</u>miriy<b>yu</b> - Taa-Haa:85",
                      "collection": "filters",
                      "chapter": {
                        "id": 21,
                        "number": 20,
                        "size": 135,
                        "citation_names": [
                          {
                            "id": 20,
                            "name": "Taa-Haa",
                            "language_id": 2,
                            "translation_id": 5,
                            "default": false,
                            "default_for_filter": true
                          },
                          {
                            "id": 174,
                            "name": "طه",
                            "language_id": 1,
                            "translation_id": 1,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 288,
                            "name": "Taa-Haa",
                            "language_id": 2,
                            "translation_id": 6,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 516,
                            "name": "Tâ' Hâ'",
                            "language_id": 3,
                            "translation_id": 7,
                            "default": true,
                            "default_for_filter": false
                          }
                        ],
                        "name": "Taa-Haa"
                      },
                      "translation": {
                        "id": 6,
                        "name": "Transliteration"
                      }
                    },
                    {
                      "from": 23,
                      "to": 23,
                      "text": "Afaraayta mani ittakha<u>th</u>a il<u>a</u>hahu haw<u>a</u>hu waa<u>d</u>allahu All<u>a</u>hu AAal<u>a</u> AAilmin wakhatama AAal<u>a</u> samAAihi waqalbihi wajaAAala AAal<u>a</u> ba<u>s</u>arihi ghish<u>a</u>watan faman yahdeehi min baAAdi All<u>a</u>hi afal<u>a</u> ta<u>th</u>akkaroon<b>a</b> - Al-Jaathiya:23",
                      "collection": "filters",
                      "chapter": {
                        "id": 46,
                        "number": 45,
                        "size": 37,
                        "citation_names": [
                          {
                            "id": 45,
                            "name": "Al-Jaathiya",
                            "language_id": 2,
                            "translation_id": 5,
                            "default": false,
                            "default_for_filter": true
                          },
                          {
                            "id": 199,
                            "name": "الجاثية",
                            "language_id": 1,
                            "translation_id": 1,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 313,
                            "name": "Crouching",
                            "language_id": 2,
                            "translation_id": 6,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 541,
                            "name": "La Arrodillada",
                            "language_id": 3,
                            "translation_id": 7,
                            "default": true,
                            "default_for_filter": false
                          }
                        ],
                        "name": "Al-Jaathiya"
                      },
                      "translation": {
                        "id": 6,
                        "name": "Transliteration"
                      }
                    },
                    {
                      "from": 11,
                      "to": 11,
                      "text": "Wai<u>tha</u> raaw tij<u>a</u>ratan aw lahwan infa<u>dd</u>oo ilayh<u>a</u> watarakooka q<u>a</u>iman qul m<u>a</u> AAinda All<u>a</u>hi khayrun mina allahwi wamina a<b>l</b>ttij<u>a</u>rati wa<b>A</b>ll<u>a</u>hu khayru a<b>l</b>rr<u>a</u>ziqeen<b>a</b> - Al-Jumu'a:11",
                      "collection": "filters",
                      "chapter": {
                        "id": 63,
                        "number": 62,
                        "size": 11,
                        "citation_names": [
                          {
                            "id": 62,
                            "name": "Al-Jumu'a",
                            "language_id": 2,
                            "translation_id": 5,
                            "default": false,
                            "default_for_filter": true
                          },
                          {
                            "id": 216,
                            "name": "الجمعة",
                            "language_id": 1,
                            "translation_id": 1,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 330,
                            "name": "Friday",
                            "language_id": 2,
                            "translation_id": 6,
                            "default": true,
                            "default_for_filter": false
                          },
                          {
                            "id": 558,
                            "name": "El Viernes",
                            "language_id": 3,
                            "translation_id": 7,
                            "default": true,
                            "default_for_filter": false
                          }
                        ],
                        "name": "Al-Jumu'a"
                      },
                      "translation": {
                        "id": 6,
                        "name": "Transliteration"
                      }
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "items": [
                        {
                          "id": 1,
                          "text": "#Allah",
                          "language": "English",
                          "collection": "tags"
                        },
                        {
                          "id": 1,
                          "text": "@naveed",
                          "full_text": "Naveed Ahmad  (@naveed)",
                          "avatar": null,
                          "collection": "authors"
                        },
                        {
                          "from": null,
                          "to": null,
                          "text": "Maryam",
                          "collection": "filters",
                          "chapter": {
                            "id": 20,
                            "number": 19,
                            "size": 98,
                            "citation_names": [
                              {
                                "id": 19,
                                "name": "Maryam",
                                "language_id": 2,
                                "translation_id": 6,
                                "default": false,
                                "default_for_filter": true
                              }
                            ],
                            "name": "Maryam"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "v1-search",
        "description": "The \"search\" API allows users to search for content based on the given search query. The search query can be formatted as follows:\n\n- If the search query starts with \"#\" (hashtag), the API will search for matching tags.\n- If the search query starts with \"@\" (at sign), the API will search for matching usernames.\n- Otherwise, the API will search for matching text in translations.\n\n\n> Auth header are optional, but if you're searching in user group/page then you'll need to provide the auth headers as well.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "q",
            "required": true,
            "description": "the search query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "sura_only",
            "description": "only search for surahs"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "exact",
                "approximate"
              ],
              "default": "approximate"
            },
            "in": "query",
            "name": "search_type",
            "allowEmptyValue": true,
            "description": "Should search for exact term or fuzzy search. Only applicable for translation search"
          }
        ],
        "tags": [
          "Search"
        ]
      }
    },
    "/v1/groups/{group_id}/invite_user": {
      "post": {
        "summary": "Room/Page invite user api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "access token for room admin user",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry ",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "User hi55@quranreflect.com was invited successfully to room testmego123"
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "value will be true if invitation was sent, false othewise"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-0": {
                    "summary": "Gorup invite User API (success true by username)",
                    "value": {
                      "success": true,
                      "message": "User samerabbas was invited successfully to group testmego123"
                    }
                  },
                  "example-1": {
                    "summary": "Gorup invite User API (already member)",
                    "value": {
                      "success": false,
                      "message": "User samerabbas is already a member of testmego123"
                    }
                  },
                  "example-2": {
                    "summary": "Gorup invite User API (wrong user info)",
                    "value": {
                      "success": false,
                      "message": "Can not find user with username hi55"
                    }
                  },
                  "example-3": {
                    "summary": "Gorup invite User API (invalid email)",
                    "value": {
                      "success": false,
                      "message": "Can't invite user with invalid email"
                    }
                  },
                  "example-4": {
                    "summary": "Gorup invite User API (succes true by email)",
                    "value": {
                      "success": true,
                      "message": "User hi55@quranreflect.com was invited successfully to room testmego123"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "operationId": "group-invite-user",
        "description": "The \"room invite\" API allows a user to invite another user to join a group/page. The invited user will receive a notification and can choose to accept or decline the invitation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "user_id": 2
                  }
                },
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "Invite existing user using id"
                  },
                  "email": {
                    "type": "string",
                    "description": "Or you can also invite user using email"
                  }
                }
              },
              "examples": {
                "invite using user id": {
                  "value": {
                    "user_id": 1
                  }
                },
                "invite using email": {
                  "value": {
                    "email": "user@quranreflect.com"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "group_id",
          "in": "path",
          "required": true,
          "description": "room/page id "
        }
      ]
    },
    "/v1/comments": {
      "post": {
        "summary": "Commet Create API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "comment": {
                      "body": "test comment ",
                      "post_id": "173",
                      "is_private": "false"
                    }
                  }
                },
                "properties": {
                  "comment": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "comment body"
                      },
                      "post_id": {
                        "type": "integer",
                        "description": "post id, optional"
                      },
                      "is_private": {
                        "type": "boolean",
                        "description": "Set this to true if this is a private comment"
                      },
                      "parent_id": {
                        "type": "integer",
                        "description": "Set the parent comment ID is this is a reply to another comment.\n"
                      }
                    },
                    "required": [
                      "body"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "comment": {
                      "body": "string",
                      "post_id": 1,
                      "is_private": true,
                      "parent_id": 0
                    }
                  }
                }
              }
            }
          },
          "description": "Sample request body, `parent_id` is optional, set this if user is replying to another comment. Either `post_id` or `parent_id` should be present."
        },
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "Comment created successfully"
                    }
                  }
                },
                "examples": {
                  "example-0": {
                    "summary": "Commet Create API (true)",
                    "value": {
                      "success": true,
                      "message": "Comment created successfully"
                    }
                  },
                  "example-1": {
                    "summary": "Commet Create API false success",
                    "value": {
                      "success": false,
                      "message": "Couldn't create comment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "The \"create comment\" API allows a user to add a new comment to a specific post.\n",
        "operationId": "comments-create"
      }
    },
    "/v1/comments/{comment_id}": {
      "put": {
        "summary": "Update Comment API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "comment": {
                      "body": "test comment ",
                      "post_id": "173",
                      "is_private": "false"
                    }
                  }
                },
                "properties": {
                  "comment": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "is_private": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "comment": {
                      "body": "string",
                      "is_private": "string"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "required": true,
            "description": "timestamp of token expiry"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "Comment is updated successfully"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Comment is updated successfully"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "message": "Comment is updated successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "status": 404,
                      "message": "Comment not found"
                    }
                  }
                },
                "examples": {
                  "comment not found": {
                    "value": {
                      "success": false,
                      "status": 404,
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "comment-update",
        "tags": [
          "Comments"
        ],
        "description": "Updates an existing comment/or reply on a specific post.\n\n"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "comment_id",
          "in": "path",
          "required": true,
          "description": "The id of the comment to be updated"
        }
      ]
    },
    "/v1/comments/{comment_id}/remove_comment": {
      "get": {
        "summary": "Remove Comment API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "required": true,
            "description": "timestamp of token expiry"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "message": "Comment was successfully removed."
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Comment was successfully removed."
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "message": "Comment was successfully removed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "status": 404,
                      "message": "Comment not found"
                    }
                  }
                },
                "examples": {
                  "comment not found": {
                    "value": {
                      "success": false,
                      "status": 404,
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "operationId": "v1-comments-delete",
        "description": "The \"remove comment\" API allows a user to delete a specific comment from a post."
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "comment_id",
          "in": "path",
          "required": true,
          "description": "comment id"
        }
      ]
    },
    "/v1/posts/{post_id}/comments": {
      "get": {
        "summary": "Post comments API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/comments-list-response"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Post with 'id'=4"
                    }
                  }
                },
                "examples": {
                  "Post not found": {
                    "value": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Post with 'id'=4"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Comments"
        ],
        "operationId": "v1-post-comments",
        "description": "Get list of comments of a specific post\n\n> auth headers of author are requried if post is private note or posted in private room."
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "post_id",
          "in": "path",
          "required": true,
          "description": "post id"
        }
      ]
    },
    "/v1/groups/{group_id}": {
      "get": {
        "summary": "Group Show API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "data": {
                        "id": 271,
                        "name": "my qf api room",
                        "description": "test room creating using qf api",
                        "active": false,
                        "group": "qfapigroupnamejddww",
                        "public": true,
                        "verified": false,
                        "room_avatar_url": null
                      }
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "group": {
                          "type": "string"
                        },
                        "public": {
                          "type": "boolean"
                        },
                        "verified": {
                          "type": "boolean"
                        },
                        "room_avatar_url": {
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "room": {
                    "summary": "Group Show API (not member)",
                    "value": {
                      "success": true,
                      "page": {
                        "id": 271,
                        "name": "my api room",
                        "description": "test room",
                        "active": false,
                        "group": "testroom",
                        "public": true,
                        "verified": false,
                        "room_avatar_url": null
                      }
                    }
                  },
                  "page": {
                    "summary": "Group Show API",
                    "value": {
                      "success": true,
                      "page": {
                        "id": 271,
                        "name": "my api room",
                        "description": "test room",
                        "active": false,
                        "room": "testroom",
                        "subdomain": "testroom",
                        "public": true,
                        "verified": false,
                        "room_avatar_url": null
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "description": "Get detail of a specific group/page\n\n> auth headers are optional for public group/page",
        "operationId": "v1-group-show"
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "group_id",
          "in": "path",
          "required": true,
          "description": "group id"
        }
      ]
    },
    "/v1/translations": {
      "get": {
        "summary": "Translations list API",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "text": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "items": [
                        {
                          "id": 1,
                          "text": "Arabic"
                        },
                        {
                          "id": 5,
                          "text": "Khattab, Clear Quran"
                        },
                        {
                          "id": 6,
                          "text": "Transliteration"
                        },
                        {
                          "id": 7,
                          "text": "Garcia"
                        },
                        {
                          "id": 8,
                          "text": "Arabic Tashkeel"
                        },
                        {
                          "id": 9,
                          "text": "Basmeih"
                        },
                        {
                          "id": 10,
                          "text": "Urdu"
                        },
                        {
                          "id": 11,
                          "text": "Indonesian Islamic Affairs Ministry"
                        },
                        {
                          "id": 12,
                          "text": "Muhammad Hamidullah"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "items": [
                    {
                      "id": 1,
                      "text": "Arabic"
                    },
                    {
                      "id": 5,
                      "text": "Saheeh International"
                    },
                    {
                      "id": 6,
                      "text": "Transliteration"
                    },
                    {
                      "id": 7,
                      "text": "Garcia"
                    },
                    {
                      "id": 8,
                      "text": "Arabic Tashkeel"
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "items": [
                        {
                          "id": 5,
                          "text": "Khattab, Clear Quran"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Misc"
        ],
        "operationId": "v1-translations-list",
        "description": "Get list of translations",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ]
      }
    },
    "/v1/users/{user_id}/get_user_translations": {
      "get": {
        "summary": "User Translations API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1531315250",
            "description": "timestamp of token expiry",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "translations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "language_id": {
                            "type": "integer"
                          },
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "translations": [
                        {
                          "id": 10,
                          "name": "Urdu",
                          "created_at": "2021-11-16T17:52:31.000Z",
                          "updated_at": "2021-11-16T17:52:31.000Z",
                          "language_id": 5,
                          "default": true
                        },
                        {
                          "id": 8,
                          "name": "Arabic Tashkeel",
                          "created_at": "2018-05-02T22:02:19.000Z",
                          "updated_at": "2018-11-18T13:54:16.000Z",
                          "language_id": 1,
                          "default": true
                        },
                        {
                          "id": 1,
                          "name": "Arabic",
                          "created_at": "2016-11-19T19:58:34.000Z",
                          "updated_at": "2018-11-18T13:54:03.000Z",
                          "language_id": 1,
                          "default": false
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "success": true,
                  "translations": [
                    {
                      "id": 1,
                      "name": "Arabic",
                      "created_at": "2016-11-19T19:58:34.000Z",
                      "updated_at": "2017-02-07T11:07:17.000Z",
                      "language_id": 1,
                      "default": true
                    },
                    {
                      "id": 5,
                      "name": "Saheeh International",
                      "created_at": "2017-02-07T08:42:38.000Z",
                      "updated_at": "2017-02-07T09:13:01.000Z",
                      "language_id": 2,
                      "default": true
                    }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "translations": [
                        {
                          "id": 0,
                          "name": "Urdu",
                          "created_at": "2021-11-16T17:52:31.000Z",
                          "updated_at": "2021-11-16T17:52:31.000Z",
                          "language_id": 5,
                          "default": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "v1-user-translation",
        "description": "Get translations preference of a specific user\n\n\n> NOTE: `user_id` in api path doesn't matter, system will authenticate using `auth headers` and send translation preferences of authenticated user."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true,
          "description": "user id"
        }
      ]
    },
    "/v1/groups/{group_id}/room_settings": {
      "get": {
        "summary": "Group settings API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Y6mJbirKHiocRo9hbIEOZg"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "4JQBBvRtNrjfrlCMICewNw"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1535368133"
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "qr_test_2@quranreflect.com"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-0": {
                    "summary": "Group settings API",
                    "value": {
                      "success": true,
                      "page": {
                        "id": 11,
                        "name": "testcuu",
                        "description": "jdkbkbdska",
                        "link": "http://localhost:3000/groups/testcurrent",
                        "current_user_is_admin?": true,
                        "members_count": 4,
                        "invitation_link": "http://localhost:3000/groups/ahmgwGbPC4S8-Cax2px3/invite_all",
                        "members": [
                          {
                            "id": 13,
                            "username": "qr_test",
                            "name": "ahmed",
                            "followed": false,
                            "is_admin?": true
                          },
                          {
                            "id": 25,
                            "username": "ahme123",
                            "name": "ahmed",
                            "followed": false,
                            "is_admin?": false
                          },
                          {
                            "id": 14,
                            "username": "qr_test_1",
                            "name": "ahmed",
                            "followed": false,
                            "is_admin?": false
                          },
                          {
                            "id": 15,
                            "username": "qr_test_2",
                            "name": "ahmed",
                            "followed": false,
                            "is_admin?": false
                          }
                        ]
                      }
                    }
                  },
                  "example-1": {
                    "summary": "Group settings API (user is not admin)",
                    "value": {
                      "success": false,
                      "message": "Unauthorized request. require page admin role."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rooms/Group"
        ],
        "operationId": "v1-group-setting",
        "description": "Deperacted, please use [Group show api](/docs/quranreflect_versioned/v-1-group-show)",
        "deprecated": true
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "group_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/posts/{post_id}/toggle_like": {
      "post": {
        "summary": "Toggle Like API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "flrqd_uo8e1cREJpEIM9rQ",
            "description": "user access token",
            "required": true
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "FjyYYaLmpuYOdV6wx8GOaw",
            "description": "client access token",
            "required": true
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1535285374",
            "description": "timestamp of token expiry",
            "required": true
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "description": "access token type",
            "required": true
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "description": "user uid",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "liked": {
                      "type": "boolean"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "liked": true
                    }
                  }
                },
                "examples": {
                  "liked": {
                    "summary": "Like Post",
                    "value": {
                      "liked": true
                    }
                  },
                  "unliked": {
                    "summary": "Unlike post",
                    "value": {
                      "liked": false
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Posts"
        ],
        "description": "This API endpoint allows the authenticated user to toggle post like.\n\nIf the user has already liked the target post, sending the same request will unlike the post, and vice versa.",
        "operationId": "v1-post-toggle-like"
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "post_id",
          "in": "path",
          "required": true,
          "description": "post id"
        }
      ]
    },
    "/v1/user_notifications_settings/{user_id}": {
      "put": {
        "summary": "Update user notifications setting api",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1537116932",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string",
                  "example": "max-age=0, private, must-revalidate"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Sun, 02 Sep 2018 17:02:39 GMT"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"c955e57777ec0d73639dca6748560d00\""
                }
              },
              "Server": {
                "schema": {
                  "type": "string",
                  "example": "nginx/1.10.2 + Phusion Passenger 5.1.2"
                }
              },
              "Status": {
                "schema": {
                  "type": "string",
                  "example": "200 OK"
                }
              },
              "Transfer-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "SAMEORIGIN"
                }
              },
              "X-Powered-By": {
                "schema": {
                  "type": "string",
                  "example": "Phusion Passenger 5.1.2"
                }
              },
              "X-Request-Id": {
                "schema": {
                  "type": "string",
                  "example": "fd265887-2b60-44df-a205-7a448959d4ec"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1; mode=block"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "success": true
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "v1-user-notificaiton-settings",
        "description": "Update email and push notification settings for user.\n\n> NOTE: QuranReflect is sending email and push notification. User can update settings for both types of notifications. Any notification setting key that has `push` in it is for Push notification. Otherwise it's email notification setting.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "user_notifications_setting": {
                      "emails_disabled": false,
                      "follow_notification": true,
                      "followed_user_added_post_notification": true,
                      "post_commented_notification": true,
                      "post_liked_notification": true,
                      "mention_notification": true,
                      "added_post_in_group_notification": true,
                      "follow_push_notification": true,
                      "followed_user_added_post_push_notification": true,
                      "post_commented_push_notification": true,
                      "post_liked_push_notification": true,
                      "mention_push_notification": true,
                      "added_post_in_group_push_notification": true
                    }
                  }
                },
                "properties": {
                  "user_notifications_setting": {
                    "type": "object",
                    "properties": {
                      "emails_disabled": {
                        "type": "boolean",
                        "description": "Disable all notification emails, if `true` system won't sent any notification email to user"
                      },
                      "follow_notification": {
                        "type": "boolean",
                        "description": "get notifcation when someone follow author"
                      },
                      "followed_user_added_post_notification": {
                        "type": "boolean",
                        "description": "get notification when someone user is following create a post"
                      },
                      "post_commented_notification": {
                        "type": "boolean",
                        "description": "get notificaiton when someone comment on user's post"
                      },
                      "post_liked_notification": {
                        "type": "boolean",
                        "description": "get notification when someone like user's post"
                      },
                      "mention_notification": {
                        "type": "boolean",
                        "description": "get notification when someone mention user"
                      },
                      "added_post_in_group_notification": {
                        "type": "boolean",
                        "description": "get notification when someone create post in a group where user is a member"
                      },
                      "follow_push_notification": {
                        "type": "boolean"
                      },
                      "followed_user_added_post_push_notification": {
                        "type": "boolean"
                      },
                      "post_commented_push_notification": {
                        "type": "boolean"
                      },
                      "post_liked_push_notification": {
                        "type": "boolean"
                      },
                      "mention_push_notification": {
                        "type": "boolean"
                      },
                      "added_post_in_group_push_notification": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "user_notifications_setting": {
                      "emails_disabled": true,
                      "follow_notification": true,
                      "followed_user_added_post_notification": true,
                      "post_commented_notification": true,
                      "post_liked_notification": true,
                      "mention_notification": true,
                      "added_post_in_group_notification": true,
                      "follow_push_notification": true,
                      "followed_user_added_post_push_notification": true,
                      "post_commented_push_notification": true,
                      "post_liked_push_notification": true,
                      "mention_push_notification": true,
                      "added_post_in_group_push_notification": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/users/{user_id}": {
      "put": {
        "summary": "Update User Info API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "jQ58plo1xWMEZHpyJTG_lQ",
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "mxlN0z0BStZEPwsvKI4YZg",
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1537177070",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "default_lang": {
                          "type": "string"
                        },
                        "onesignal_player_id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "uid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "verified": {
                          "type": "boolean"
                        },
                        "follow_notification": {
                          "type": "boolean"
                        },
                        "comments_notification": {
                          "type": "boolean"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "post_as": {
                          "type": "boolean"
                        },
                        "android_registration_id": {
                          "type": "null"
                        },
                        "sign_up_type": {
                          "type": "string"
                        },
                        "emails_disabled": {
                          "type": "boolean"
                        },
                        "is_admin?": {
                          "type": "boolean"
                        },
                        "user_avatar_url": {
                          "type": "string"
                        },
                        "rooms_list": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "user_type": {
                          "type": "null"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "status": "success",
                      "data": {
                        "first_name": "amer",
                        "last_name": "abbas",
                        "description": "test description",
                        "default_lang": "ar",
                        "onesignal_player_id": "",
                        "email": "naveedahmada036@gmail.com",
                        "username": "naveed",
                        "id": 1885,
                        "uid": "naveedahmada036@gmail.com",
                        "name": "Amer Abbas",
                        "verified": false,
                        "follow_notification": false,
                        "comments_notification": true,
                        "provider": "email",
                        "post_as": false,
                        "android_registration_id": null,
                        "sign_up_type": "OLD USER",
                        "emails_disabled": true,
                        "is_admin?": true,
                        "user_avatar_url": ":s3_path_url/?1668674182",
                        "rooms_list": [
                          [
                            250,
                            "My Room"
                          ],
                          [
                            264,
                            "My Private Group"
                          ],
                          [
                            272,
                            "Testing Room"
                          ]
                        ],
                        "user_type": null
                      },
                      "message": "Your profile has been updated successfully."
                    }
                  }
                },
                "example": {
                  "success": false,
                  "errors": [
                    "User not found."
                  ],
                  "status": "error"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "first_name": "amer",
                        "last_name": "abbas",
                        "description": "test description",
                        "default_lang": "ar",
                        "onesignal_player_id": "",
                        "email": "naveedahmada036@gmail.com",
                        "username": "naveed",
                        "id": 1885,
                        "uid": "naveedahmada036@gmail.com",
                        "name": "Amer Abbas",
                        "verified": false,
                        "follow_notification": false,
                        "comments_notification": true,
                        "provider": "email",
                        "post_as": false,
                        "android_registration_id": null,
                        "sign_up_type": "OLD USER",
                        "emails_disabled": true,
                        "is_admin?": true,
                        "user_avatar_url": ":s3_path_url/?1668674182",
                        "rooms_list": [
                          [
                            250,
                            "My Room"
                          ],
                          [
                            264,
                            "My Private Group"
                          ],
                          [
                            272,
                            "Testing Room"
                          ]
                        ],
                        "user_type": null
                      },
                      "message": "Your profile has been updated successfully."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string",
                  "example": "no-cache"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Transfer-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "SAMEORIGIN"
                }
              },
              "X-Request-Id": {
                "schema": {
                  "type": "string",
                  "example": "ad68badd-0588-4c88-8320-45df3f5dd587"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1; mode=block"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status": "error",
                  "errors": [
                    "Password confirmation doesn't match Password"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Users"
        ],
        "operationId": "v1-update-user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "user": {
                      "name": "amer abbas",
                      "description": "test description",
                      "password": "123456",
                      "password_confirmation": "123456",
                      "default_lang": "ar",
                      "onesignal_player_id": ""
                    }
                  }
                },
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "password_confirmation": {
                        "type": "string"
                      },
                      "default_lang": {
                        "type": "string",
                        "description": "iso code of user language"
                      },
                      "onesignal_player_id": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "user": {
                      "first_name": "amer",
                      "last_name": "abbas",
                      "description": "test description",
                      "password": "123456",
                      "password_confirmation": "123456",
                      "default_lang": "ar",
                      "onesignal_player_id": ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true,
          "description": "user id"
        }
      ]
    },
    "/citation_texts/citation_texts_from_filter": {
      "get": {
        "summary": "Get translation",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "citation_texts": [
                    {
                      "id": 22037,
                      "text": "But seek, through that which Allah has given you, the home of the Hereafter; and [yet], do not forget your share of the world. And do good as Allah has done good to you. And desire not corruption in the land. Indeed, Allah does not like corrupters.\"",
                      "number": 77
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Misc"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "citation_id",
            "description": "citation/surah number",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "translation_id",
            "description": "translation",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "from",
            "description": "from ayah"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "to",
            "description": "to ayah"
          }
        ],
        "operationId": "v1-get-translation",
        "description": "Get translations text of specifc surah, and range of ayah.",
        "deprecated": true
      }
    },
    "/v1/posts/{post_id}/toggle_save": {
      "post": {
        "summary": "Toggle Save Post API",
        "parameters": [
          {
            "name": "access-token",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "zKWMb7qk5DVDHFK4htAsOQ",
            "required": true,
            "description": "user access token"
          },
          {
            "name": "client",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "tIlwWy_JuhqY_mz79_sO0Q",
            "required": true,
            "description": "client access token"
          },
          {
            "name": "expiry",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "1541940275",
            "required": true,
            "description": "timestamp of token expiry "
          },
          {
            "name": "token-type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer",
            "required": true,
            "description": "access token type"
          },
          {
            "name": "uid",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "user@quranreflect.com",
            "required": true,
            "description": "user uid"
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "saved": {
                      "type": "boolean"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "saved": false
                    }
                  }
                },
                "examples": {
                  "saved": {
                    "summary": "Toggle Save Post API (Save Post)",
                    "value": {
                      "saved": true
                    }
                  },
                  "unsave": {
                    "summary": "Toggle Save Post API (Unsave Post)",
                    "value": {
                      "saved": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Post with 'id'=27000000"
                    }
                  }
                },
                "examples": {
                  "post not found": {
                    "value": {
                      "status": 404,
                      "success": false,
                      "error": "Couldn't find Post with 'id'=27000000"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Posts"
        ],
        "operationId": "v1-post-toggle-save",
        "description": "This API endpoint allows the authenticated user to toggle post save the post.\n\nIf the user has already saved the target post, sending the same request will remove the saved post, and vice versa.\n"
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "post_id",
          "in": "path",
          "required": true,
          "description": "post id"
        }
      ]
    },
    "/v1/citation_texts": {
      "get": {
        "summary": "Search translations api",
        "tags": [
          "Misc"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/citation-search-respnse"
          }
        },
        "operationId": "get-citation_texts",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "q",
            "description": "the query string",
            "required": true
          },
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "approximate",
                "exact"
              ],
              "default": "approximate"
            },
            "in": "query",
            "name": "search_type",
            "description": "search type"
          }
        ],
        "description": "Search translations and get the matched results"
      }
    },
    "/v1/users/{username}/profile": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true,
          "description": "username of user"
        }
      ],
      "get": {
        "summary": "Get user profile detail",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": true,
                      "user_info": {
                        "id": 1885,
                        "username": "naveed",
                        "name": "Naveed String",
                        "first_name": "naveed",
                        "last_name": "string",
                        "verified": false,
                        "profile_img": null,
                        "followed": false,
                        "original_profile_img": null,
                        "rooms_list": [],
                        "display_name": "Naveed String",
                        "user_type": "scholar",
                        "user_notifications_settings": [
                          {
                            "id": 2159,
                            "emails_disabled": true,
                            "follow_notification": true,
                            "followed_user_added_post_notification": true,
                            "post_commented_notification": true,
                            "post_liked_notification": true,
                            "mention_notification": true,
                            "added_post_in_group_notification": true,
                            "follow_push_notification": true,
                            "followed_user_added_post_push_notification": true,
                            "post_commented_push_notification": true,
                            "post_liked_push_notification": true,
                            "mention_push_notification": true,
                            "added_post_in_group_push_notification": true
                          }
                        ]
                      },
                      "followers": 7,
                      "followees": 24
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user_info": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "deprecated": true
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "verified": {
                          "type": "boolean"
                        },
                        "profile_img": {
                          "nullable": true
                        },
                        "followed": {
                          "type": "boolean"
                        },
                        "original_profile_img": {
                          "nullable": true
                        },
                        "rooms_list": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "user_type": {
                          "type": "string"
                        },
                        "user_notifications_settings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "emails_disabled": {
                                "type": "boolean"
                              },
                              "follow_notification": {
                                "type": "boolean"
                              },
                              "followed_user_added_post_notification": {
                                "type": "boolean"
                              },
                              "post_commented_notification": {
                                "type": "boolean"
                              },
                              "post_liked_notification": {
                                "type": "boolean"
                              },
                              "mention_notification": {
                                "type": "boolean"
                              },
                              "added_post_in_group_notification": {
                                "type": "boolean"
                              },
                              "follow_push_notification": {
                                "type": "boolean"
                              },
                              "followed_user_added_post_push_notification": {
                                "type": "boolean"
                              },
                              "post_commented_push_notification": {
                                "type": "boolean"
                              },
                              "post_liked_push_notification": {
                                "type": "boolean"
                              },
                              "mention_push_notification": {
                                "type": "boolean"
                              },
                              "added_post_in_group_push_notification": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "followers": {
                      "type": "integer"
                    },
                    "followees": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": true,
                      "user_info": {
                        "id": 1885,
                        "username": "naveed",
                        "name": "Naveed Ahmad",
                        "first_name": "naveed",
                        "last_name": "ahmad",
                        "verified": false,
                        "profile_img": null,
                        "followed": false,
                        "original_profile_img": null,
                        "rooms_list": [],
                        "display_name": "Naveed Ahmad",
                        "user_type": "scholar",
                        "user_notifications_settings": [
                          {
                            "id": 2159,
                            "emails_disabled": true,
                            "follow_notification": true,
                            "followed_user_added_post_notification": true,
                            "post_commented_notification": true,
                            "post_liked_notification": true,
                            "mention_notification": true,
                            "added_post_in_group_notification": true,
                            "follow_push_notification": true,
                            "followed_user_added_post_push_notification": true,
                            "post_commented_push_notification": true,
                            "post_liked_push_notification": true,
                            "mention_push_notification": true,
                            "added_post_in_group_push_notification": true
                          }
                        ]
                      },
                      "followers": 7,
                      "followees": 24
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Invalid user ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "success": false,
                      "message": "Invalid User"
                    }
                  },
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "success": false,
                      "message": "Invalid user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "operationId": "get-v1-users-profile-info",
        "description": "This API endpoint allows retrieving the profile details of a specific user, identified by their username. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/protected-resource-query-params"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "access-token",
            "description": "user access token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "client",
            "description": "client access token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "expiry",
            "description": "timestamp of token expiry date"
          },
          {
            "schema": {
              "type": "string",
              "example": "Bearer",
              "default": "Bearer"
            },
            "in": "header",
            "name": "token-type",
            "description": "token type",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "uid",
            "description": "user uid"
          }
        ]
      }
    }
  },
  "x-internal": false,
  "components": {
    "securitySchemes": {
      "apikey": {
        "name": "client_auth_token",
        "type": "apiKey",
        "in": "query"
      }
    },
    "responses": {
      "400": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": false,
                  "errors": [
                    "string"
                  ],
                  "status": "error"
                }
              },
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "errors": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "description": "will be 400 ( bad request )"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "success": true,
                  "errors": "Bad request, required params are missing or have invalid value.",
                  "status": "string"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized response, api will respond with this 401 eithr user is not logged in or do not have permission to perform some action. Like creating a post in a room, but user is not member of room.\n\n> System will also return 401 if api token is missing or invlaid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": [
                    "You need to sign in or sign up before continuing."
                  ]
                }
              },
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "integer",
                  "default": 401
                },
                "success": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "examples": {
              "not logged in": {
                "value": {
                  "errors": [
                    "You need to sign in or sign up before continuing."
                  ],
                  "success": false
                }
              },
              "missing or invalid api key": {
                "value": {
                  "message": "You don't have permission!",
                  "status": 401,
                  "success": false
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable entity, api will respond with this status if any required params is missing or has invalid value.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": false,
                  "errors": [
                    "User not found."
                  ],
                  "status": "error"
                }
              },
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "errors": {
                  "type": "array",
                  "description": "list of errors",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "default": "error",
                  "description": "422, unprocessable entity"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "success": false,
                  "errors": [
                    "string"
                  ],
                  "status": "error"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error, api will respond with 500 if something went wrong processing the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string",
                  "default": "internal server error",
                  "description": "error message"
                }
              },
              "required": [
                "success",
                "message"
              ]
            }
          }
        }
      },
      "signin-response": {
        "description": "Signin response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "data": {
                    "email": "naveedahmada036@gmail.com",
                    "username": "naveed",
                    "id": 1885,
                    "uid": "naveedahmada036@gmail.com",
                    "name": "Naveed Ahmad",
                    "verified": false,
                    "follow_notification": false,
                    "comments_notification": true,
                    "description": "quran.com",
                    "default_lang": "en",
                    "provider": "email",
                    "onesignal_player_id": null,
                    "post_as": true,
                    "android_registration_id": "value",
                    "sign_up_type": "OLD USER",
                    "emails_disabled": true,
                    "first_name": "naveed",
                    "last_name": "ahmad",
                    "is_admin?": true,
                    "user_avatar_url": null,
                    "rooms_list": [
                      [
                        250,
                        "My Room"
                      ],
                      [
                        257,
                        "Pvt Group"
                      ]
                    ],
                    "user_type": "scholar"
                  }
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "text/html": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "text/plain": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "uid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "follow_notification": {
                      "type": "boolean"
                    },
                    "comments_notification": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "default_lang": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "onesignal_player_id": {
                      "type": "string"
                    },
                    "post_as": {
                      "type": "boolean"
                    },
                    "android_registration_id": {
                      "type": "string"
                    },
                    "sign_up_type": {
                      "type": "string"
                    },
                    "emails_disabled": {
                      "type": "boolean"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "is_admin?": {
                      "type": "boolean"
                    },
                    "user_avatar_url": {
                      "type": "string"
                    },
                    "rooms_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "user_type": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-examples": {
                "Example 1": {
                  "data": {
                    "email": "user@quranreflect.com",
                    "username": "samer_abbas",
                    "id": 820,
                    "uid": "user@quranreflect.com",
                    "name": "Samer Abbas",
                    "verified": false,
                    "follow_notification": false,
                    "comments_notification": true,
                    "description": "قُلْ إِنَّ صَلَاتِي وَنُسُكِي وَمَحْيَايَ وَمَمَاتِي لِلَّـهِ رَبِّ الْعَالَمِينَ",
                    "default_lang": "en",
                    "provider": "email",
                    "onesignal_player_id": null,
                    "post_as": true,
                    "android_registration_id": "null",
                    "sign_up_type": "OLD USER",
                    "emails_disabled": false,
                    "first_name": "Samer",
                    "last_name": "Abbas",
                    "is_admin?": false,
                    "user_avatar_url": ":s3_path_url/?1589419671",
                    "rooms_list": [],
                    "user_type": "student"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "access-token": {
            "schema": {
              "type": "string",
              "example": "Bearer"
            },
            "description": "user's access token"
          },
          "token-type": {
            "schema": {
              "type": "string"
            },
            "description": "token type"
          },
          "client": {
            "schema": {
              "type": "string"
            },
            "description": "client's access token"
          },
          "expiry": {
            "schema": {
              "type": "string"
            },
            "description": "token expiry timestamp"
          },
          "uid": {
            "schema": {
              "type": "string"
            },
            "description": "User's uid"
          },
          "Authorization": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "signup-response": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "data": {
                    "id": 0,
                    "email": "string",
                    "name": "string",
                    "username": "string",
                    "verified": true,
                    "follow_notification": true,
                    "comments_notification": true,
                    "description": null,
                    "default_lang": "string",
                    "uid": "string",
                    "provider": "string",
                    "onesignal_player_id": null,
                    "post_as": true,
                    "android_registration_id": "string",
                    "sign_up_type": "string",
                    "emails_disabled": true,
                    "first_name": "string",
                    "last_name": null,
                    "is_admin?": true,
                    "user_avatar_url": null,
                    "rooms_list": [
                      {
                        "id": "string"
                      }
                    ],
                    "user_type": null
                  }
                }
              },
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/User"
                },
                "status": {
                  "type": "string",
                  "default": "succes"
                },
                "message": {
                  "type": "string",
                  "enum": [
                    "Your profile has been updated successfully.",
                    "Your account has been created successfully, Please check your email to verify it."
                  ],
                  "description": "success response message"
                }
              },
              "required": [
                "data",
                "status",
                "message"
              ]
            },
            "examples": {}
          }
        },
        "headers": {
          "access-token": {
            "schema": {
              "type": "string"
            },
            "description": "user access token"
          },
          "client": {
            "schema": {
              "type": "string"
            },
            "description": "client token"
          },
          "expiry": {
            "schema": {
              "type": "string"
            },
            "description": "timestamp of token expiry date"
          },
          "uid": {
            "schema": {
              "type": "string"
            },
            "description": "user uid"
          }
        }
      },
      "signup-error-response": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "status": "error",
                  "data": {
                    "id": null,
                    "email": "user@quranreflect.com",
                    "name": "Jannah01123233",
                    "created_at": null,
                    "updated_at": null,
                    "username": "jannah032312334",
                    "verified": false,
                    "avatar_file_name": null,
                    "avatar_content_type": null,
                    "avatar_file_size": null,
                    "avatar_updated_at": null,
                    "follow_notification": false,
                    "comments_notification": true,
                    "description": null,
                    "default_lang": "en",
                    "uid": "",
                    "provider": "email",
                    "onesignal_player_id": null,
                    "post_as": false,
                    "apns_token": null,
                    "android_registration_id": null,
                    "sign_up_type": "web",
                    "emails_disabled": false,
                    "user_type": null
                  },
                  "errors": [
                    "Username has already been taken"
                  ]
                }
              },
              "properties": {
                "status": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/components/schemas/User"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Username has already been taken"
                    ]
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "search-user-response": {
        "description": "Users list, respose will have user id and username or email",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "items": [
                    {
                      "id": 1885,
                      "username": "naveed"
                    }
                  ]
                }
              },
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "User Id."
                      },
                      "username": {
                        "type": "string",
                        "description": "Username."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "items": [
                    {
                      "id": 1885,
                      "username": "naveed"
                    }
                  ]
                }
              },
              "Example 2": {
                "value": {
                  "items": [
                    {
                      "id": 1885,
                      "email": "naveedahmada0362gmail.com"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "citation-search-respnse": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Citation"
              }
            },
            "examples": {
              "Example 1": {
                "value": [
                  {
                    "id": 13,
                    "text": "˹Remember˺ when Joseph said to his father, “O my dear father! Indeed I dreamt of eleven stars, and the sun, and the moon—I saw them prostrating to me!” - Joseph/4",
                    "translated_name": "Joseph",
                    "from": 4,
                    "to": 4,
                    "translation_id": 5
                  }
                ]
              }
            }
          }
        }
      },
      "create-post-response": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": true,
                  "message": "Post was successfully created.",
                  "post": {
                    "id": 442,
                    "body": "i love #allah and #quran",
                    "likes": 0,
                    "draft": false,
                    "published_at": "June 25, 2018 19:26",
                    "room_id": null,
                    "global": true,
                    "editable": true,
                    "deletable": true,
                    "reportable": false,
                    "citation_texts": {
                      "0": [
                        {
                          "id": 12480,
                          "citation_id": 3,
                          "number": 1,
                          "text": "بسم الله الرحمن الرحيم الم",
                          "translation_id": 1
                        }
                      ],
                      "1": [
                        {
                          "id": 13149,
                          "citation_id": 6,
                          "number": 8,
                          "text": "يا أيها الذين آمنوا كونوا قوامين لله شهداء بالقسط ولا يجرمنكم شنآن قوم على ألا تعدلوا اعدلوا هو أقرب للتقوى واتقوا الله إن الله خبير بما تعملون",
                          "translation_id": 1
                        },
                        {
                          "id": 13150,
                          "citation_id": 6,
                          "number": 9,
                          "text": "وعد الله الذين آمنوا وعملوا الصالحات لهم مغفرة وأجر عظيم",
                          "translation_id": 1
                        },
                        {
                          "id": 13151,
                          "citation_id": 6,
                          "number": 10,
                          "text": "والذين كفروا وكذبوا بآياتنا أولئك أصحاب الجحيم",
                          "translation_id": 1
                        },
                        {
                          "id": 13152,
                          "citation_id": 6,
                          "number": 11,
                          "text": "يا أيها الذين آمنوا اذكروا نعمت الله عليكم إذ هم قوم أن يبسطوا إليكم أيديهم فكف أيديهم عنكم واتقوا الله وعلى الله فليتوكل المؤمنون",
                          "translation_id": 1
                        }
                      ]
                    },
                    "language": "ARABIC",
                    "detected_translation": 1,
                    "views": 0,
                    "group": null,
                    "group_link": null,
                    "comments": [],
                    "liked": false,
                    "author": {
                      "id": 4,
                      "username": "amerabbas",
                      "name": "Amer",
                      "verified": false,
                      "profile_img": "/avatar/150/16a085/AMER"
                    },
                    "filters": [
                      {
                        "id": 356,
                        "from": null,
                        "to": null,
                        "indicator_text": "surah-3"
                      },
                      {
                        "id": 357,
                        "from": 1,
                        "to": 1,
                        "indicator_text": "surah-2-1"
                      },
                      {
                        "id": 358,
                        "from": 8,
                        "to": 11,
                        "indicator_text": "surah-5-8:11"
                      }
                    ],
                    "tags": [
                      {
                        "id": 5,
                        "name": "Zohd"
                      },
                      {
                        "id": 17,
                        "name": "Allah"
                      },
                      {
                        "id": 25,
                        "name": "quran"
                      }
                    ]
                  }
                }
              },
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "message": {
                  "type": "string",
                  "enum": [
                    "post created successfully"
                  ],
                  "default": "post created successfully"
                },
                "post": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "success": true,
                  "message": "post created successfully",
                  "post": {
                    "id": 0,
                    "body": "string",
                    "likes": 0,
                    "draft": true,
                    "published_at": "string",
                    "room_id": null,
                    "global": true,
                    "editable": true,
                    "deletable": true,
                    "reportable": true,
                    "citation_texts": [
                      {
                        "id": 0,
                        "text": "string",
                        "translated_name": "string",
                        "from": 0,
                        "to": 0,
                        "translation_id": 0
                      }
                    ],
                    "language": "string",
                    "detected_translation": 0,
                    "views": 0,
                    "group": null,
                    "group_link": null,
                    "comments": [
                      {}
                    ],
                    "liked": true,
                    "author": {
                      "id": 0,
                      "username": "string",
                      "name": "string",
                      "verified": true,
                      "profile_img": "string"
                    },
                    "filters": [
                      {
                        "id": 0,
                        "from": 0,
                        "to": 0,
                        "indicator_text": "string"
                      }
                    ],
                    "tags": [
                      {
                        "id": 0,
                        "name": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "missing-apikey-response": {
        "description": "Forbidden, api key is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "default": 401
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "success": false,
                  "message": "You don't have permission!"
                }
              }
            }
          }
        }
      },
      "user-profile-response": {
        "description": "User profile, notification and other settings and recent posts",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": true,
                  "user_info": {
                    "id": 1885,
                    "username": "naveed",
                    "name": "String String",
                    "first_name": "string",
                    "last_name": "string",
                    "verified": false,
                    "profile_img": null,
                    "followed": false,
                    "original_profile_img": null,
                    "rooms_list": [
                      [
                        250,
                        "My Room"
                      ],
                      [
                        257,
                        "Pvt Group"
                      ],
                      [
                        256,
                        "Dsfdfdfdfdsf"
                      ]
                    ],
                    "display_name": "String String",
                    "user_type": "scholar",
                    "user_notifications_settings": [
                      {
                        "id": 2159,
                        "emails_disabled": true,
                        "follow_notification": true,
                        "followed_user_added_post_notification": true,
                        "post_commented_notification": true,
                        "post_liked_notification": true,
                        "mention_notification": true,
                        "added_post_in_group_notification": true,
                        "follow_push_notification": true,
                        "followed_user_added_post_push_notification": true,
                        "post_commented_push_notification": true,
                        "post_liked_push_notification": true,
                        "mention_push_notification": true,
                        "added_post_in_group_push_notification": true
                      }
                    ]
                  },
                  "posts_count": 29,
                  "followers": 6,
                  "followees": 23,
                  "posts": {
                    "posts": [
                      {
                        "id": 15033,
                        "body": "بسم الله الرحمن الرحيم\r\n\r\nامام فخر الدین رازی رَحْمَۃُاللہِ تَعَالٰی عَلَیْہِ فرماتے ہیں : اللہ تعالٰی نے اپنی ذات کو رحمٰن اور رحیم فرمایا تو یہ اس کی شان سے بعید ہے کہ وہ رحم نہ فرمائے ۔ مروی ہے کہ ایک سائل نے بلند دروازے کے پاس کھڑے ہو کر کچھ مانگا تو اسے تھوڑا سا دے دیا گیا،دوسرے دن وہ ایک کلہاڑا لے کر آ یا اور دروازے کو توڑنا شروع کر دیا۔اس سے کہا گیا کہ تو ایسا کیوں کر رہا ہے؟اس نے جواب دیا:تو دروازے کو اپنی عطا کے لائق کر یا اپنی عطا کو دروازے کے لائق بنا۔اے ہمارے اللہ! عَزَّوَجَلَّ،رحمت کے سمندروں کو تیری رحمت سے وہ نسبت ہے جو ایک چھوٹے سے ذرے کو تیرے عرش سے نسبت ہے اور تو نے اپنی کتاب کی ابتداء میں اپنے بندوں پر اپنی رحمت کی صفت بیان کی اس لئے ہمیں اپنی رحمت اور فضل سے محروم نہ رکھنا۔",
                        "likes": 3,
                        "draft": false,
                        "published_at": "August 18, 2022 06:24",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {
                          "0": [
                            {
                              "id": 12473,
                              "citation_id": 2,
                              "number": 1,
                              "text": "بسم الله الرحمن الرحيم",
                              "translation_id": 1
                            },
                            {
                              "id": 31181,
                              "citation_id": 2,
                              "number": 1,
                              "text": "En el nombre de Dios, el Compasivo con toda la creación, el Misericordioso con los creyentes.",
                              "translation_id": 7
                            },
                            {
                              "id": 43655,
                              "citation_id": 2,
                              "number": 1,
                              "text": "Dengan nama Allah, Yang Maha Pemurah, lagi Maha Mengasihani.",
                              "translation_id": 9
                            },
                            {
                              "id": 49891,
                              "citation_id": 2,
                              "number": 1,
                              "text": "اللہ کے نام سے جو رحمان و رحیم ہے",
                              "translation_id": 10
                            }
                          ]
                        },
                        "custom_last_updated": "September 12, 2022 08:19",
                        "detected_translation": 10,
                        "views": 57,
                        "group": null,
                        "group_link": null,
                        "comments_count": 3,
                        "trimmed_citation_texts": {
                          "0": [
                            [
                              {
                                "id": 49891,
                                "citation_id": 2,
                                "number": 1,
                                "text": "اللہ کے نام سے جو رحمان و رحیم ہے",
                                "translation_id": 10
                              }
                            ]
                          ]
                        },
                        "public_comments_count": 3,
                        "created_at": "August 18, 2022 06:24",
                        "room_post_status": "as_room",
                        "liked": true,
                        "saved": false,
                        "comments": [
                          {
                            "id": 20387,
                            "body": "Slaam ",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T11:07:54.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20388,
                            "body": "Slaam\n\n Slaam\n\nSlaam\n\n",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T11:09:00.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          }
                        ],
                        "social_media_post_title": "String String's Reflection on Surah Al-Faatiha:1",
                        "twitter_post_prefill": "بسم الله الرحمن الرحيم\r\n\r\nامام فخر الدین رازی رَحْ... ",
                        "whatsapp_post_prefill": "بسم الله الرحمن الرحيم\r\n\r\nامام فخر الدین رازی رَحْمَۃُاللہِ تَعَالٰی عَلَیْہِ فرماتے ہیں : اللہ تعالٰی نے اپنی ذات کو رحمٰن اور رحیم فرمایا تو یہ اس کی شان سے بعید ہے کہ وہ رحم نہ فرمائے ۔ مروی ہے کہ ایک سائل نے بلند دروازے کے پاس کھڑے ہو کر کچھ مانگا تو اسے تھوڑا سا دے دیا گیا،دوسرے دن وہ ایک کلہاڑا لے کر آ یا اور دروازے کو توڑنا شروع کر دیا۔اس سے کہا گیا کہ تو ایسا کیوں کر رہا ہے؟اس نے جواب دیا:تو دروازے کو اپنی عطا کے لائق کر یا اپنی عطا کو دروازے کے لائق بنا۔اے ہمارے اللہ! عَزَّوَجَلَّ،رحمت کے سمندروں کو تیری رحمت سے وہ نسبت ہے جو ایک چھوٹے سے ذرے کو تیرے عرش سے نسبت ہے اور تو نے اپنی کتاب کی ابتداء میں اپنے بندوں پر اپنی رحمت کی صفت بیان کی اس لئے ہمیں اپنی رحمت اور فضل سے محروم نہ رکھنا۔\n\nChapter 1: The Opening, Verse:  1\nاللہ کے نام سے جو رحمان و رحیم ہے (1)\n\nhttp://localhost:3000/posts/15033",
                        "verified": false,
                        "hidden": false,
                        "language": "URDU",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [
                          {
                            "id": 234,
                            "surah_number": 1,
                            "from": 1,
                            "to": 1,
                            "indicator_text": "surah-1-1"
                          }
                        ],
                        "tags": []
                      },
                      {
                        "id": 15316,
                        "body": "صفا اور مروہ بے شک اللہ کی یادگاروں میں سے ہیں. 158 البقرہ.\r\n\r\nس. صفا اور مروہ اللہ تعالیٰ کی یادگاروں میں سے ہے، اس سے کیا مراد ہے؟\r\n\r\nج. حج اور عمرہ میں صفا اور مروہ کے درمیان سعی کا مقصد اس تاریخی یاد کو تازہ کرنا ہے کہ اللہ کا اپنے بندوں سے کیا معاملہ ہے. بی بی حاجرہ کی طرح اگر اللہ کا کوئی بندہ  اللہ کی راہ میں بڑھتے ہوئے اس حد تک چلا جائے کہ اس کے قدموں کے نیچے ریگستان اور بیابان کے سوا کچھ نہ رہے تو اللہ  اپنے ایسے بندے کے لئے اپنی قدرت سے ریگستان میں  رزق کے چشمے جاری کر دے گا.\r\n\r\nتذکیر القران سے اقتباس",
                        "likes": 2,
                        "draft": false,
                        "published_at": "September 15, 2022 11:57",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {
                          "0": [
                            {
                              "id": 12637,
                              "citation_id": 3,
                              "number": 158,
                              "text": "إن الصفا والمروة من شعائر الله فمن حج البيت أو اعتمر فلا جناح عليه أن يطوف بهما ومن تطوع خيرا فإن الله شاكر عليم",
                              "translation_id": 1
                            },
                            {
                              "id": 31345,
                              "citation_id": 3,
                              "number": 158,
                              "text": "[El recorrido entre los montes de] As-Safa y Al-Marwah es un rito establecido por Dios. Quien realice la peregrinación mayor o la peregrinación menor a La Casa [Sagrada de La Meca] sepa que no incurre en falta por realizar el recorrido ritual entre ambas. Y quien voluntariamente haga el bien, sepa que Dios se lo recompensará, pues Él premia las buenas intenciones.",
                              "translation_id": 7
                            },
                            {
                              "id": 43819,
                              "citation_id": 3,
                              "number": 158,
                              "text": "Sesungguhnya \"Safa\" dan \"Marwah\" itu ialah sebahagian daripada Syiar (lambang) ugama Allah; maka sesiapa yang menunaikan ibadat Haji ke Baitullah atau mengerjakan Umrah, maka tiadalah menjadi salah ia bersaie (berjalan dengan berulang-alik) di antara keduanya. Dan sesiapa yang bersukarela mengerjakan perkara kebajikan, maka sesungguhnya Allah memberi balasan pahala, lagi Maha Mengetahui.",
                              "translation_id": 9
                            },
                            {
                              "id": 50055,
                              "citation_id": 3,
                              "number": 158,
                              "text": "یقیناً صفا اور مَروہ، اللہ کی نشانیوں میں سے ہیں لہٰذا جو شخص بیت اللہ کا حج یا عمرہ کرے، اس کے لیے کوئی گناہ کی بات نہیں کہ وہ اِن دونوں پہاڑیوں کے درمیان سعی کر لے اور جو برضا و رغبت کوئی بھلائی کا کام کرے گا، اللہ کو اس کا علم ہے او ر وہ اس کی قدر کرنے والا ہے",
                              "translation_id": 10
                            }
                          ]
                        },
                        "custom_last_updated": "December 22, 2022 07:25",
                        "detected_translation": 10,
                        "views": 4,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {
                          "0": [
                            [
                              {
                                "id": 50055,
                                "citation_id": 3,
                                "number": 158,
                                "text": "یقیناً صفا اور مَروہ، اللہ کی نشانیوں میں سے ہیں لہٰذا جو شخص بیت اللہ کا حج یا عمرہ کرے، اس کے لیے کوئی گناہ کی بات نہیں کہ وہ اِن دونوں پہاڑیوں کے درمیان سعی کر لے اور جو برضا و رغبت کوئی بھلائی کا کام کرے گا، اللہ کو اس کا علم ہے او ر وہ اس کی قدر کرنے والا ہے",
                                "translation_id": 10
                              }
                            ]
                          ]
                        },
                        "public_comments_count": 0,
                        "created_at": "September 15, 2022 11:57",
                        "room_post_status": "as_room",
                        "liked": true,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection on Surah Al-Baqara:158",
                        "twitter_post_prefill": "صفا اور مروہ بے شک اللہ کی یادگاروں میں سے ہیں. 15... ",
                        "whatsapp_post_prefill": "صفا اور مروہ بے شک اللہ کی یادگاروں میں سے ہیں. 158 البقرہ.\r\n\r\nس. صفا اور مروہ اللہ تعالیٰ کی یادگاروں میں سے ہے، اس سے کیا مراد ہے؟\r\n\r\nج. حج اور عمرہ میں صفا اور مروہ کے درمیان سعی کا مقصد اس تاریخی یاد کو تازہ کرنا ہے کہ اللہ کا اپنے بندوں سے کیا معاملہ ہے. بی بی حاجرہ کی طرح اگر اللہ کا کوئی بندہ  اللہ کی راہ میں بڑھتے ہوئے اس حد تک چلا جائے کہ اس کے قدموں کے نیچے ریگستان اور بیابان کے سوا کچھ نہ رہے تو اللہ  اپنے ایسے بندے کے لئے اپنی قدرت سے ریگستان میں  رزق کے چشمے جاری کر دے گا.\r\n\r\nتذکیر القران سے اقتباس\n\nChapter 2: The Cow, Verse:  158\nیقیناً صفا اور مَروہ، اللہ کی نشانیوں میں سے ہیں لہٰذا جو شخص بیت اللہ کا حج یا عمرہ کرے، اس کے لیے کوئی گناہ کی بات نہیں کہ وہ اِن دونوں پہاڑیوں کے درمیان سعی کر لے اور جو برضا و رغبت کوئی بھلائی کا کام کرے گا، اللہ کو اس کا علم ہے او ر وہ اس کی قدر کرنے والا ہے (158)\n\nhttp://localhost:3000/posts/15316",
                        "verified": false,
                        "hidden": false,
                        "language": "URDU",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [
                          {
                            "id": 869,
                            "surah_number": 2,
                            "from": 158,
                            "to": 158,
                            "indicator_text": "surah-2-158"
                          }
                        ],
                        "tags": []
                      },
                      {
                        "id": 15993,
                        "body": "test post",
                        "likes": 1,
                        "draft": false,
                        "published_at": "January 02, 2023 09:43",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "January 02, 2023 09:47",
                        "detected_translation": 5,
                        "views": 38,
                        "group": null,
                        "group_link": null,
                        "comments_count": 7,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 7,
                        "created_at": "January 02, 2023 09:43",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [
                          {
                            "id": 20380,
                            "body": "testing email notifictions",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T09:44:39.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20381,
                            "body": "another ",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T09:44:51.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20382,
                            "body": "fdsdfsfdsfsdf",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T09:47:19.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20383,
                            "body": "testing emails",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T10:52:20.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20384,
                            "body": "hello naveed",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T10:53:46.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20385,
                            "body": "hello world",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T10:55:28.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          },
                          {
                            "id": 20386,
                            "body": "salam bro",
                            "is_private": false,
                            "hidden": false,
                            "created_at": "2023-01-02T11:05:41.000Z",
                            "comment_policy_show": true,
                            "parent_id": null,
                            "children": [],
                            "author": {
                              "id": 22907,
                              "username": "qr_student_of_knowledge",
                              "name": "Student of knowledge Test",
                              "first_name": "student_of_knowledge",
                              "last_name": "Test",
                              "verified": false,
                              "profile_img": null,
                              "followed": false,
                              "original_profile_img": null,
                              "rooms_list": [],
                              "display_name": "Student Of Knowledge Test",
                              "user_type": "student"
                            }
                          }
                        ],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "test post ",
                        "whatsapp_post_prefill": "test post\n\n\n\nhttp://localhost:3000/posts/15993",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15964,
                        "body": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضون الفلوس\" من أجل تشويه الإسلام ، ولكن يبدو أن نيتهم مختلطة ... جانب منها من أجل النقود وجانب آخر يعتقدون أنهم ينصرون قضية نبيلة بمعاداتهم للإسلام.",
                        "likes": 0,
                        "draft": false,
                        "published_at": "December 20, 2022 08:11",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "December 20, 2022 08:11",
                        "detected_translation": 8,
                        "views": 12,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "December 20, 2022 08:11",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضو... ",
                        "whatsapp_post_prefill": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضون الفلوس\" من أجل تشويه الإسلام ، ولكن يبدو أن نيتهم مختلطة ... جانب منها من أجل النقود وجانب آخر يعتقدون أنهم ينصرون قضية نبيلة بمعاداتهم للإسلام.\n\n\n\nhttp://localhost:3000/posts/15964",
                        "verified": false,
                        "hidden": false,
                        "language": "ARABIC",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15965,
                        "body": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضون الفلوس\" من أجل تشويه الإسلام ، ولكن يبدو أن نيتهم مختلطة ... جانب منها من أجل النقود وجانب آخر يعتقدون أنهم ينصرون قضية نبيلة بمعاداتهم للإسلام.",
                        "likes": 0,
                        "draft": false,
                        "published_at": "December 20, 2022 08:17",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "December 20, 2022 08:17",
                        "detected_translation": 8,
                        "views": 7,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "December 20, 2022 08:17",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضو... ",
                        "whatsapp_post_prefill": "قصة سحرة فرعون تذكرني بقصص إسلام أناس كانوا \"يقبضون الفلوس\" من أجل تشويه الإسلام ، ولكن يبدو أن نيتهم مختلطة ... جانب منها من أجل النقود وجانب آخر يعتقدون أنهم ينصرون قضية نبيلة بمعاداتهم للإسلام.\n\n\n\nhttp://localhost:3000/posts/15965",
                        "verified": true,
                        "hidden": false,
                        "language": "ARABIC",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15994,
                        "body": "dfsdf sdf dsf",
                        "likes": 0,
                        "draft": false,
                        "published_at": "February 01, 2023 08:00",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "February 01, 2023 08:00",
                        "detected_translation": 5,
                        "views": 6,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "February 01, 2023 08:00",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "dfsdf sdf dsf ",
                        "whatsapp_post_prefill": "dfsdf sdf dsf\n\n\n\nhttp://localhost:3000/posts/15994",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15995,
                        "body": "this is a new reflection",
                        "likes": 0,
                        "draft": false,
                        "published_at": "February 01, 2023 08:08",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "February 01, 2023 08:08",
                        "detected_translation": 5,
                        "views": 6,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "February 01, 2023 08:08",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "this is a new reflection ",
                        "whatsapp_post_prefill": "this is a new reflection\n\n\n\nhttp://localhost:3000/posts/15995",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15996,
                        "body": "this is last test",
                        "likes": 0,
                        "draft": false,
                        "published_at": "February 01, 2023 08:34",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "February 01, 2023 08:34",
                        "detected_translation": 5,
                        "views": 6,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "February 01, 2023 08:34",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "this is last test ",
                        "whatsapp_post_prefill": "this is last test\n\n\n\nhttp://localhost:3000/posts/15996",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      },
                      {
                        "id": 15997,
                        "body": "adfsdf sdfsd fsd fsdf sdfds f. #qr",
                        "likes": 0,
                        "draft": false,
                        "published_at": "February 01, 2023 08:42",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "February 01, 2023 08:42",
                        "detected_translation": 5,
                        "views": 6,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "February 01, 2023 08:42",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "adfsdf sdfsd fsd fsdf sdfds f. #qr ",
                        "whatsapp_post_prefill": "adfsdf sdfsd fsd fsdf sdfds f. #qr\n\n#qr\n\n\n\nhttp://localhost:3000/posts/15997",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": [
                          {
                            "id": 2871,
                            "name": "qr",
                            "language": "ENGLISH"
                          }
                        ]
                      },
                      {
                        "id": 15998,
                        "body": "helllo thre",
                        "likes": 0,
                        "draft": false,
                        "published_at": "February 01, 2023 13:21",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": false,
                        "restorable": false,
                        "citation_texts": {},
                        "custom_last_updated": "February 01, 2023 13:21",
                        "detected_translation": 5,
                        "views": 6,
                        "group": null,
                        "group_link": null,
                        "comments_count": 0,
                        "trimmed_citation_texts": {},
                        "public_comments_count": 0,
                        "created_at": "February 01, 2023 13:21",
                        "room_post_status": "as_room",
                        "liked": false,
                        "saved": false,
                        "comments": [],
                        "social_media_post_title": "String String's Reflection",
                        "twitter_post_prefill": "helllo thre ",
                        "whatsapp_post_prefill": "helllo thre\n\n\n\nhttp://localhost:3000/posts/15998",
                        "verified": true,
                        "hidden": false,
                        "language": "ENGLISH",
                        "author": {
                          "id": 1885,
                          "username": "naveed",
                          "name": "String String",
                          "first_name": "string",
                          "last_name": "string",
                          "verified": false,
                          "profile_img": null,
                          "followed": false,
                          "original_profile_img": null,
                          "rooms_list": [
                            [
                              250,
                              "My Room"
                            ],
                            [
                              257,
                              "Pvt Group"
                            ],
                            [
                              256,
                              "Dsfdfdfdfdsf"
                            ]
                          ],
                          "display_name": "String String",
                          "user_type": "scholar"
                        },
                        "filters": [],
                        "tags": []
                      }
                    ]
                  },
                  "pages": 2
                }
              },
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "user_info": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "profile_img": {
                      "nullable": true
                    },
                    "followed": {
                      "type": "boolean"
                    },
                    "original_profile_img": {
                      "nullable": true
                    },
                    "rooms_list": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "user_type": {
                      "type": "string"
                    },
                    "user_notifications_settings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "emails_disabled": {
                            "type": "boolean"
                          },
                          "follow_notification": {
                            "type": "boolean"
                          },
                          "followed_user_added_post_notification": {
                            "type": "boolean"
                          },
                          "post_commented_notification": {
                            "type": "boolean"
                          },
                          "post_liked_notification": {
                            "type": "boolean"
                          },
                          "mention_notification": {
                            "type": "boolean"
                          },
                          "added_post_in_group_notification": {
                            "type": "boolean"
                          },
                          "follow_push_notification": {
                            "type": "boolean"
                          },
                          "followed_user_added_post_push_notification": {
                            "type": "boolean"
                          },
                          "post_commented_push_notification": {
                            "type": "boolean"
                          },
                          "post_liked_push_notification": {
                            "type": "boolean"
                          },
                          "mention_push_notification": {
                            "type": "boolean"
                          },
                          "added_post_in_group_push_notification": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "posts_count": {
                  "type": "integer"
                },
                "followers": {
                  "type": "integer"
                },
                "followees": {
                  "type": "integer"
                },
                "posts": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    }
                  }
                },
                "pages": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "success": true,
                  "user_info": {
                    "id": 0,
                    "username": "string",
                    "name": "string",
                    "first_name": "string",
                    "last_name": "string",
                    "verified": true,
                    "profile_img": null,
                    "followed": true,
                    "original_profile_img": null,
                    "rooms_list": [
                      "string"
                    ],
                    "display_name": "string",
                    "user_type": "string",
                    "user_notifications_settings": [
                      {
                        "id": 0,
                        "emails_disabled": true,
                        "follow_notification": true,
                        "followed_user_added_post_notification": true,
                        "post_commented_notification": true,
                        "post_liked_notification": true,
                        "mention_notification": true,
                        "added_post_in_group_notification": true,
                        "follow_push_notification": true,
                        "followed_user_added_post_push_notification": true,
                        "post_commented_push_notification": true,
                        "post_liked_push_notification": true,
                        "mention_push_notification": true,
                        "added_post_in_group_push_notification": true
                      }
                    ]
                  },
                  "posts_count": 0,
                  "followers": 0,
                  "followees": 0,
                  "posts": {
                    "posts": [
                      {
                        "id": 0,
                        "body": "string",
                        "likes": 0,
                        "draft": true,
                        "published_at": "string",
                        "room_id": null,
                        "global": true,
                        "editable": true,
                        "deletable": true,
                        "reportable": true,
                        "citation_texts": [
                          {
                            "id": 0,
                            "text": "string",
                            "translated_name": "string",
                            "from": 0,
                            "to": 0,
                            "translation_id": 0
                          }
                        ],
                        "language": "string",
                        "detected_translation": 0,
                        "views": 0,
                        "group": null,
                        "group_link": null,
                        "comments": [
                          {}
                        ],
                        "liked": true,
                        "author": {
                          "id": 0,
                          "username": "string",
                          "name": "string",
                          "verified": true,
                          "profile_img": "string"
                        },
                        "filters": [
                          {
                            "id": 0,
                            "from": 0,
                            "to": 0,
                            "indicator_text": "string"
                          }
                        ],
                        "tags": [
                          {
                            "id": 0,
                            "name": "string"
                          }
                        ]
                      }
                    ]
                  },
                  "pages": 1
                }
              }
            }
          }
        }
      },
      "get-post-response": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "post": {
                    "id": 442,
                    "body": "i love #allah and #quran",
                    "likes": 0,
                    "draft": false,
                    "published_at": "June 25, 2018 19:26",
                    "room_id": null,
                    "global": true,
                    "editable": true,
                    "deletable": true,
                    "reportable": false,
                    "citation_texts": {
                      "0": [
                        {
                          "id": 12480,
                          "citation_id": 3,
                          "number": 1,
                          "text": "بسم الله الرحمن الرحيم الم",
                          "translation_id": 1
                        }
                      ],
                      "1": [
                        {
                          "id": 13149,
                          "citation_id": 6,
                          "number": 8,
                          "text": "يا أيها الذين آمنوا كونوا قوامين لله شهداء بالقسط ولا يجرمنكم شنآن قوم على ألا تعدلوا اعدلوا هو أقرب للتقوى واتقوا الله إن الله خبير بما تعملون",
                          "translation_id": 1
                        },
                        {
                          "id": 13150,
                          "citation_id": 6,
                          "number": 9,
                          "text": "وعد الله الذين آمنوا وعملوا الصالحات لهم مغفرة وأجر عظيم",
                          "translation_id": 1
                        },
                        {
                          "id": 13151,
                          "citation_id": 6,
                          "number": 10,
                          "text": "والذين كفروا وكذبوا بآياتنا أولئك أصحاب الجحيم",
                          "translation_id": 1
                        },
                        {
                          "id": 13152,
                          "citation_id": 6,
                          "number": 11,
                          "text": "يا أيها الذين آمنوا اذكروا نعمت الله عليكم إذ هم قوم أن يبسطوا إليكم أيديهم فكف أيديهم عنكم واتقوا الله وعلى الله فليتوكل المؤمنون",
                          "translation_id": 1
                        }
                      ]
                    },
                    "language": "ARABIC",
                    "detected_translation": 1,
                    "views": 0,
                    "group": null,
                    "group_link": null,
                    "comments": [],
                    "liked": false,
                    "author": {
                      "id": 4,
                      "username": "amerabbas",
                      "name": "Amer",
                      "verified": false,
                      "profile_img": "/avatar/150/16a085/AMER"
                    },
                    "filters": [
                      {
                        "id": 356,
                        "from": null,
                        "to": null,
                        "indicator_text": "surah-3"
                      },
                      {
                        "id": 357,
                        "from": 1,
                        "to": 1,
                        "indicator_text": "surah-2-1"
                      },
                      {
                        "id": 358,
                        "from": 8,
                        "to": 11,
                        "indicator_text": "surah-5-8:11"
                      }
                    ],
                    "tags": [
                      {
                        "id": 5,
                        "name": "Zohd"
                      },
                      {
                        "id": 17,
                        "name": "Allah"
                      },
                      {
                        "id": 25,
                        "name": "quran"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "room-index-response": {
        "description": "List of rooms/groups",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": true,
                  "pages": {
                    "rooms": []
                  },
                  "groups": {
                    "rooms": [
                      {
                        "id": 250,
                        "name": "My room",
                        "description": "",
                        "public": true,
                        "active": false,
                        "verified": false,
                        "subdomain": "",
                        "room_type": "group",
                        "group": "my-room123",
                        "avatar": "/avatars/original/missing.png",
                        "link": "http://localhost:3000/groups/my-room123",
                        "members_count": 1,
                        "posts_count": 1,
                        "current_user_is_admin": true
                      },
                      {
                        "id": 264,
                        "name": "my private group",
                        "description": "",
                        "public": false,
                        "active": false,
                        "verified": false,
                        "subdomain": "",
                        "room_type": "group",
                        "group": "pvt-group",
                        "avatar": "/avatars/original/missing.png",
                        "link": "http://localhost:3000/groups/pvt-group",
                        "members_count": 1,
                        "posts_count": 2,
                        "current_user_is_admin": true
                      }
                    ]
                  }
                }
              },
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "pages": {
                  "type": "object",
                  "description": "List ofrooms that the user can access",
                  "deprecated": true,
                  "properties": {
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Room"
                      }
                    }
                  }
                },
                "groups": {
                  "type": "object",
                  "description": "List of groups that the user can access",
                  "properties": {
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Room"
                      }
                    }
                  }
                }
              },
              "required": [
                "pages"
              ]
            }
          }
        }
      },
      "comments-list-response": {
        "description": "List of comments and replies",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "success": true,
                  "data": {
                    "comments": [
                      {
                        "id": 51,
                        "body": "So you think we should turn this project from non-profit to profitable company :)",
                        "is_private": false,
                        "hidden": false,
                        "created_at": "2018-02-04T03:02:36.000Z",
                        "comment_policy_show": true,
                        "parent_id": null,
                        "children": [],
                        "author": {
                          "id": 15,
                          "username": "muneebarrabi",
                          "name": "منيب",
                          "first_name": "منيب",
                          "last_name": "",
                          "verified": false,
                          "profile_img": ":s3_path_url/?1587852641",
                          "followed": false,
                          "original_profile_img": ":s3_path_url/?1587852641",
                          "rooms_list": [],
                          "display_name": "منيب",
                          "user_type": "student"
                        }
                      },
                      {
                        "id": 68,
                        "body": "There is no harm in doing so, especially if it means we are provided with a better product and/or service. Remember 'making profit' ≠ 'greed'",
                        "is_private": false,
                        "hidden": false,
                        "created_at": "2018-05-20T21:56:38.000Z",
                        "comment_policy_show": true,
                        "parent_id": null,
                        "children": [],
                        "author": {
                          "id": 150,
                          "username": "Fahd_Baig",
                          "name": "Fahd",
                          "first_name": "Fahd",
                          "last_name": "",
                          "verified": false,
                          "profile_img": ":s3_path_url/?1586814893",
                          "followed": false,
                          "original_profile_img": ":s3_path_url/?1586814893",
                          "rooms_list": [],
                          "display_name": "Fahd",
                          "user_type": null
                        }
                      }
                    ]
                  }
                }
              },
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Room": {
        "title": "Room",
        "x-stoplight": {
          "id": "pvav3zx97eji2"
        },
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": "string"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the room"
          }
        },
        "description": "QuranReflect Room model."
      },
      "User": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": 22939,
            "email": "user@quranreflect.com",
            "name": "Jannah01123233",
            "username": "jandnah032312334",
            "verified": false,
            "follow_notification": false,
            "comments_notification": true,
            "description": "My bio",
            "default_lang": "en",
            "uid": "user@quranreflect.com",
            "provider": "email",
            "onesignal_player_id": null,
            "post_as": false,
            "android_registration_id": null,
            "sign_up_type": "web",
            "emails_disabled": false,
            "first_name": "jannah01123233",
            "last_name": null,
            "is_admin?": false,
            "user_avatar_url": null,
            "rooms_list": [],
            "user_type": null
          }
        },
        "title": "User",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Id of the user"
          },
          "email": {
            "type": "string",
            "description": "The email of the user"
          },
          "name": {
            "type": "string",
            "deprecated": true,
            "description": "Full name of user. It is deprecated, please use `first_name` and `last_name` instead."
          },
          "username": {
            "type": "string",
            "description": "The username"
          },
          "verified": {
            "type": "boolean",
            "description": "true if user is a verified member"
          },
          "follow_notification": {
            "type": "boolean"
          },
          "comments_notification": {
            "type": "boolean"
          },
          "description": {
            "description": "user bio",
            "type": "string",
            "nullable": true
          },
          "default_lang": {
            "type": "string",
            "description": "ISO code of the language that the user prefers to read posts in."
          },
          "uid": {
            "type": "string",
            "description": "User uniqe identifier"
          },
          "provider": {
            "type": "string",
            "description": "User account provider."
          },
          "onesignal_player_id": {
            "type": "string",
            "description": "User's OneSignal subscription Id.",
            "nullable": true
          },
          "post_as": {
            "type": "boolean",
            "description": "Whether user is allowed to post as another user."
          },
          "android_registration_id": {
            "type": "string",
            "description": "The registration Id of the user's Android device. ",
            "nullable": true
          },
          "sign_up_type": {
            "type": "string",
            "enum": [
              "OLD USER",
              "web",
              "QR_IOS",
              "QR_ANDROID",
              "QuranMemorizer",
              "QF_AUTH"
            ],
            "description": "The signup type",
            "nullable": true
          },
          "emails_disabled": {
            "type": "boolean",
            "description": "Whether the user disabled receving emails or not."
          },
          "first_name": {
            "type": "string",
            "description": "The user's first name."
          },
          "last_name": {
            "type": "string",
            "description": "The user's last name.",
            "nullable": true
          },
          "is_admin?": {
            "type": "boolean",
            "description": "Whether the user is an admin."
          },
          "user_avatar_url": {
            "type": "string",
            "description": "The user's avatar url.",
            "nullable": true
          },
          "rooms_list": {
            "type": "array",
            "description": "List of rooms the user is a member of.",
            "items": {
              "$ref": "#/components/schemas/Room"
            }
          },
          "user_type": {
            "type": "string",
            "description": "The type of the user. `0` = student of knowledge.`1` = scholar.",
            "enum": [
              "0",
              "1"
            ],
            "nullable": true
          }
        },
        "description": "QuranReflect User model. "
      },
      "Citation": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": 13,
            "text": "˹Remember˺ when Joseph said to his father, “O my dear father! Indeed I dreamt of eleven stars, and the sun, and the moon—I saw them prostrating to me!” - Joseph/4",
            "translated_name": "Joseph",
            "from": 4,
            "to": 4,
            "translation_id": 5,
            "klass": "Citation"
          }
        },
        "title": "Citation",
        "description": "QuranReflect Translation/Citation model.",
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string",
            "description": "translation text"
          },
          "translated_name": {
            "type": "string",
            "description": "name of the translation"
          },
          "from": {
            "type": "integer",
            "description": "from ayah number"
          },
          "to": {
            "type": "integer",
            "description": "to ayah number"
          },
          "translation_id": {
            "type": "integer"
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "x-stoplight": {
          "id": "5nld22q7fx12x"
        },
        "type": "object",
        "description": "QuranReflect Tag model.",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "the #tag"
          }
        },
        "x-examples": {
          "Example 1": {
            "id": 1,
            "name": "Quran"
          }
        }
      },
      "Post": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": 442,
            "body": "i love #allah and #quran",
            "likes": 0,
            "draft": false,
            "published_at": "June 25, 2018 19:26",
            "room_id": null,
            "global": true,
            "editable": true,
            "deletable": true,
            "reportable": false,
            "estimated_reading_time": 55018.9,
            "citation_texts": {
              "0": [
                {
                  "id": 12480,
                  "citation_id": 3,
                  "number": 1,
                  "text": "بسم الله الرحمن الرحيم الم",
                  "translation_id": 1
                }
              ],
              "1": [
                {
                  "id": 13149,
                  "citation_id": 6,
                  "number": 8,
                  "text": "يا أيها الذين آمنوا كونوا قوامين لله شهداء بالقسط ولا يجرمنكم شنآن قوم على ألا تعدلوا اعدلوا هو أقرب للتقوى واتقوا الله إن الله خبير بما تعملون",
                  "translation_id": 1
                },
                {
                  "id": 13150,
                  "citation_id": 6,
                  "number": 9,
                  "text": "وعد الله الذين آمنوا وعملوا الصالحات لهم مغفرة وأجر عظيم",
                  "translation_id": 1
                },
                {
                  "id": 13151,
                  "citation_id": 6,
                  "number": 10,
                  "text": "والذين كفروا وكذبوا بآياتنا أولئك أصحاب الجحيم",
                  "translation_id": 1
                },
                {
                  "id": 13152,
                  "citation_id": 6,
                  "number": 11,
                  "text": "يا أيها الذين آمنوا اذكروا نعمت الله عليكم إذ هم قوم أن يبسطوا إليكم أيديهم فكف أيديهم عنكم واتقوا الله وعلى الله فليتوكل المؤمنون",
                  "translation_id": 1
                }
              ]
            },
            "language": "ARABIC",
            "detected_translation": 1,
            "views": 0,
            "group": null,
            "group_link": null,
            "comments": [],
            "liked": false,
            "author": {
              "id": 4,
              "username": "amerabbas",
              "name": "Amer",
              "verified": false,
              "profile_img": "/avatar/150/16a085/AMER"
            },
            "filters": [
              {
                "id": 356,
                "from": null,
                "to": null,
                "indicator_text": "surah-3"
              },
              {
                "id": 357,
                "from": 1,
                "to": 1,
                "indicator_text": "surah-2-1"
              },
              {
                "id": 358,
                "from": 8,
                "to": 11,
                "indicator_text": "surah-5-8:11"
              }
            ],
            "tags": [
              {
                "id": 5,
                "name": "Zohd"
              },
              {
                "id": 17,
                "name": "Allah"
              },
              {
                "id": 25,
                "name": "quran"
              }
            ]
          }
        },
        "title": "Post",
        "description": "Post/Reflection model",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the post."
          },
          "body": {
            "type": "string",
            "description": "the post text\n"
          },
          "likes": {
            "type": "integer",
            "description": "The number of likes."
          },
          "draft": {
            "type": "boolean",
            "description": "Whether the post should be publicly viewed or not."
          },
          "published_at": {
            "type": "string",
            "description": "The date the post was published at. Format of the date is `MMMM dd, yyyy HH:mm`"
          },
          "room_id": {
            "nullable": true
          },
          "global": {
            "type": "boolean",
            "description": "Whether the post is global or not. A post inside a room can be set to global and becomes visible to everyone."
          },
          "editable": {
            "type": "boolean",
            "description": "Whether the post is editable or not. It will be `true` if the post belongs to the current user."
          },
          "deletable": {
            "type": "boolean",
            "description": "Whether the post is deletable or not. It will be `true` if the post belongs to the current user."
          },
          "reportable": {
            "type": "boolean",
            "description": "Whether the current user can report the post or not."
          },
          "citation_texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Citation"
            }
          },
          "language": {
            "type": "string",
            "description": "The language of the post."
          },
          "detected_translation": {
            "type": "integer"
          },
          "views": {
            "type": "integer",
            "description": "The number of views."
          },
          "group": {
            "nullable": true
          },
          "group_link": {
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "liked": {
            "type": "boolean"
          },
          "author": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "profile_img": {
                "type": "string"
              }
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "from": {
                  "type": "integer",
                  "nullable": true
                },
                "to": {
                  "type": "integer",
                  "nullable": true
                },
                "indicator_text": {
                  "type": "string"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "estimated_reading_time": {
            "type": "number",
            "example": 55018.9,
            "default": 0,
            "format": "float",
            "description": "The average time it takes to read the post"
          }
        }
      },
      "Comment": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "id": 68,
            "body": "There is no harm in doing so, especially if it means we are provided with a better product and/or service. Remember 'making profit' ≠ 'greed'",
            "is_private": false,
            "hidden": false,
            "created_at": "2018-05-20T21:56:38.000Z",
            "comment_policy_show": true,
            "parent_id": null,
            "children": [],
            "author": {
              "id": 150,
              "username": "Fahd_Baig",
              "name": "Fahd",
              "first_name": "Fahd",
              "last_name": "",
              "verified": false,
              "profile_img": ":s3_path_url/?1586814893",
              "followed": false,
              "original_profile_img": ":s3_path_url/?1586814893",
              "rooms_list": [],
              "display_name": "Fahd",
              "user_type": null
            }
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "body": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "comment_policy_show": {
            "type": "boolean"
          },
          "parent_id": {
            "description": "parent comment id if this is a reply to another comment",
            "nullable": true
          },
          "children": {
            "type": "array",
            "description": "Comment replies",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "author": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "verified": {
                "type": "boolean"
              },
              "profile_img": {
                "type": "string"
              },
              "followed": {
                "type": "boolean"
              },
              "original_profile_img": {
                "type": "string"
              },
              "rooms_list": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "display_name": {
                "type": "string"
              },
              "user_type": {
                "nullable": true
              }
            }
          }
        },
        "title": "Comment",
        "description": "QuranReflect Comment model."
      }
    },
    "examples": {
      "missing-api-key-response": {
        "value": {
          "description": "Forbidden, api key is missing or invalid",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "success": false,
                    "message": "You don't have permission!"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "success": false,
                    "message": "You don't have permission!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "protected-resource-query-params": {
        "name": "client_auth_token",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Client API token"
      }
    }
  },
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Posts"
    },
    {
      "name": "Rooms/Group"
    },
    {
      "name": "Search"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Misc"
    }
  ]
}
